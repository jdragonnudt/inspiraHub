[
  {
    "objectID": "myblog/about.html",
    "href": "myblog/about.html",
    "title": "About",
    "section": "",
    "text": "技德系统CTO，计算机科学与技术博士，信创智能终端工作组组长，中国计算机学会理论计算机科学专业委员会执行委员，中国计算机学会高级会员，长沙市军民融合高层次人才。曾任国防科技大学计算机学院副教授、硕士生导师。曾获院校育才奖银奖1项、科技进步奖2项。湖南省教学成果二等奖1项、湖南省教学成果三等奖1项。"
  },
  {
    "objectID": "myblog/about.html#education",
    "href": "myblog/about.html#education",
    "title": "About",
    "section": "Education",
    "text": "Education\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "myblog/about.html#experience",
    "href": "myblog/about.html#experience",
    "title": "About",
    "section": "Experience",
    "text": "Experience\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Spet 2012 - April 2018"
  },
  {
    "objectID": "myblog/posts/welcome/index.html",
    "href": "myblog/posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts.\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "这是jdragon的个人网站.\n记录个人在计算机、人工智能、计算机教育、高等教育等方面的一些思考。\n\n\n\n Back to top"
  },
  {
    "objectID": "AIengineerBook/RAG_advanced.html",
    "href": "AIengineerBook/RAG_advanced.html",
    "title": "高级RAG",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n运用RAG高级技能，改进 RAG应用程序的效果\n\n\n\n\n\n观看视频：吴恩达《构建和评估高级的RAG模型应用》|Building and Evaluating Advanced RAG Applications（中英字幕）\n\n视频时长：1.5小时；\n视频内容简介：检索增强生成（RAG）作为大型语言模型（LLM）最受欢迎的应用之一，脱颖而出。该方法有助于将LLM与组织的专有数据集成。 要成功实施RAG，必须改进检索技术以获得连贯的上下文，并采用有效的评估指标。 在本课程中，我们将探讨以下内容：\n\n两种高级检索方法：句子窗口检索和自动合并检索，与基线RAG流程相比，表现更好。\n评估和实验跟踪：一种评估和逐步改进RAG流程性能的方法。\nRAG三要素：上下文相关性、基于事实、回答相关性，这些方法用于评估LLM响应的相关性和真实性。\n\n\n阅读文档：Cheat Sheet and some recipes for building Advanced RAG\n阅读文档：A comprehensive guide on building RAG-based LLM application by AnyScale\n\n\n\n\n\n完成deelplearning.ai上的Building and Evaluating Advanced RAG Applications课程练习\n\n\n\n\n\n使用 LangChain 在 HuggingFace 文档上构建高级 RAG",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级RAG"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_advanced.html#学习目标",
    "href": "AIengineerBook/RAG_advanced.html#学习目标",
    "title": "高级RAG",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n运用RAG高级技能，改进 RAG应用程序的效果",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级RAG"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_advanced.html#学习活动",
    "href": "AIengineerBook/RAG_advanced.html#学习活动",
    "title": "高级RAG",
    "section": "",
    "text": "观看视频：吴恩达《构建和评估高级的RAG模型应用》|Building and Evaluating Advanced RAG Applications（中英字幕）\n\n视频时长：1.5小时；\n视频内容简介：检索增强生成（RAG）作为大型语言模型（LLM）最受欢迎的应用之一，脱颖而出。该方法有助于将LLM与组织的专有数据集成。 要成功实施RAG，必须改进检索技术以获得连贯的上下文，并采用有效的评估指标。 在本课程中，我们将探讨以下内容：\n\n两种高级检索方法：句子窗口检索和自动合并检索，与基线RAG流程相比，表现更好。\n评估和实验跟踪：一种评估和逐步改进RAG流程性能的方法。\nRAG三要素：上下文相关性、基于事实、回答相关性，这些方法用于评估LLM响应的相关性和真实性。\n\n\n阅读文档：Cheat Sheet and some recipes for building Advanced RAG\n阅读文档：A comprehensive guide on building RAG-based LLM application by AnyScale",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级RAG"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_advanced.html#实践",
    "href": "AIengineerBook/RAG_advanced.html#实践",
    "title": "高级RAG",
    "section": "",
    "text": "完成deelplearning.ai上的Building and Evaluating Advanced RAG Applications课程练习",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级RAG"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_advanced.html#补充资料",
    "href": "AIengineerBook/RAG_advanced.html#补充资料",
    "title": "高级RAG",
    "section": "",
    "text": "使用 LangChain 在 HuggingFace 文档上构建高级 RAG",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级RAG"
    ]
  },
  {
    "objectID": "AIengineerBook/deploy_app.html",
    "href": "AIengineerBook/deploy_app.html",
    "title": "应用部署",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用ollama或LM studio等工具在本地 部署 开源LLM；\n使用vllm或skypilot等工具在云上 部署 LLM。\n\n\n\n\n\nLocal deployment: Running open source LLMs on local machines (LM Studio, Ollama, oobabooga, kobold.cpp, etc.)\nDeploying LLMs at scale on cloud technologies like vLLM and SkyPilot\n阅读文档：Deploying LangChain applications (runnables and chains) as a REST API.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "应用部署"
    ]
  },
  {
    "objectID": "AIengineerBook/deploy_app.html#学习目标",
    "href": "AIengineerBook/deploy_app.html#学习目标",
    "title": "应用部署",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用ollama或LM studio等工具在本地 部署 开源LLM；\n使用vllm或skypilot等工具在云上 部署 LLM。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "应用部署"
    ]
  },
  {
    "objectID": "AIengineerBook/deploy_app.html#学习活动",
    "href": "AIengineerBook/deploy_app.html#学习活动",
    "title": "应用部署",
    "section": "",
    "text": "Local deployment: Running open source LLMs on local machines (LM Studio, Ollama, oobabooga, kobold.cpp, etc.)\nDeploying LLMs at scale on cloud technologies like vLLM and SkyPilot\n阅读文档：Deploying LangChain applications (runnables and chains) as a REST API.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "应用部署"
    ]
  },
  {
    "objectID": "AIengineerBook/references.html",
    "href": "AIengineerBook/references.html",
    "title": "参考文献",
    "section": "",
    "text": "参考文献\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "AIengineerBook/eval_benchmark.html",
    "href": "AIengineerBook/eval_benchmark.html",
    "title": "评估和benchmark",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n列举 主要的llm benchmark；\n通过open llm leaderboard、HELM、Chatbot Arena 比较 不同LLM的能力；\n能够根据选型目的 使用 对应的评估指标对不同的llm进行评估。\n\n\n\n\n\nLLMs如何评估\nHow to evaluate LLMs with Hugging Face Lighteval\n观看视频：吴恩达《LLMOps的自动化测试|Automated Testing for LLMOps》中英字幕\n\n视频时长：1小时\n视频内容简介：将学习如何创建一个持续集成（CI）工作流程，以便在每次更改时评估您的LLM应用程序，以实现更快、更安全、更高效的应用程序开发。 在使用生成式人工智能构建应用程序时，模型的行为比传统软件更不可预测。这就是为什么系统化测试可以在节省开发时间和成本方面发挥更大的作用。持续集成是LLMOps的一个重要组成部分，它是在开发过程中对软件进行小的更改并进行彻底测试，早期捕捉问题以便更容易修复的实践。通过稳健的自动化测试管道，您将能够在错误累积之前隔离出错误，从而更容易且成本较低地进行修复。自动化测试使您的团队能够专注于构建新功能，以便更快地迭代和发布产品。 完成本课程后，将能够：\n\n编写稳健的LLM评估，以解决常见问题，如幻觉、数据漂移以及有害或冒犯性输出。\n构建一个持续集成（CI）工作流程，以自动评估对应用程序的每次更改。\n协调您的持续集成工作流程，在开发的不同阶段运行特定的评估。\n\n视频来源：Deeplearning.ai课程LLMOps的自动化测试\n\n\n\n\n\n\n\n\n\n评估大型语言模型（LLM）系统：指标、挑战和最佳实践",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "评估和benchmark"
    ]
  },
  {
    "objectID": "AIengineerBook/eval_benchmark.html#学习目标",
    "href": "AIengineerBook/eval_benchmark.html#学习目标",
    "title": "评估和benchmark",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n列举 主要的llm benchmark；\n通过open llm leaderboard、HELM、Chatbot Arena 比较 不同LLM的能力；\n能够根据选型目的 使用 对应的评估指标对不同的llm进行评估。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "评估和benchmark"
    ]
  },
  {
    "objectID": "AIengineerBook/eval_benchmark.html#学习活动",
    "href": "AIengineerBook/eval_benchmark.html#学习活动",
    "title": "评估和benchmark",
    "section": "",
    "text": "LLMs如何评估\nHow to evaluate LLMs with Hugging Face Lighteval\n观看视频：吴恩达《LLMOps的自动化测试|Automated Testing for LLMOps》中英字幕\n\n视频时长：1小时\n视频内容简介：将学习如何创建一个持续集成（CI）工作流程，以便在每次更改时评估您的LLM应用程序，以实现更快、更安全、更高效的应用程序开发。 在使用生成式人工智能构建应用程序时，模型的行为比传统软件更不可预测。这就是为什么系统化测试可以在节省开发时间和成本方面发挥更大的作用。持续集成是LLMOps的一个重要组成部分，它是在开发过程中对软件进行小的更改并进行彻底测试，早期捕捉问题以便更容易修复的实践。通过稳健的自动化测试管道，您将能够在错误累积之前隔离出错误，从而更容易且成本较低地进行修复。自动化测试使您的团队能够专注于构建新功能，以便更快地迭代和发布产品。 完成本课程后，将能够：\n\n编写稳健的LLM评估，以解决常见问题，如幻觉、数据漂移以及有害或冒犯性输出。\n构建一个持续集成（CI）工作流程，以自动评估对应用程序的每次更改。\n协调您的持续集成工作流程，在开发的不同阶段运行特定的评估。\n\n视频来源：Deeplearning.ai课程LLMOps的自动化测试",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "评估和benchmark"
    ]
  },
  {
    "objectID": "AIengineerBook/eval_benchmark.html#补充资料",
    "href": "AIengineerBook/eval_benchmark.html#补充资料",
    "title": "评估和benchmark",
    "section": "",
    "text": "评估大型语言模型（LLM）系统：指标、挑战和最佳实践",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "评估和benchmark"
    ]
  },
  {
    "objectID": "AIengineerBook/summary.html",
    "href": "AIengineerBook/summary.html",
    "title": "总结",
    "section": "",
    "text": "总结\n成为一名出色的LLM工程师是一场持久战。保持对新技术、研究动态的关注，勇于尝试，勤于反思，积极参与社区交流，不断拓宽知识边界，是通往卓越的不二法门。\n\n\n\n\n Back to top",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "总结"
    ]
  },
  {
    "objectID": "AIengineerBook/LLMops.html",
    "href": "AIengineerBook/LLMops.html",
    "title": "LLM ops",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用LLMops相关技能 构建 LLMops流水线。\n\n\n\n\n\n观看视频：吴恩达《大语言模型运维|LLMOps》中英字幕\n\n视频时长：1小时20分；\n视频内容简介：你将学习LLMOps管道的预处理训练数据、监督调整和自适应监督调整管道，以训练和部署自定义LLM（Language Model Model）。这对于为特定应用创建LLM工作流程非常有用。例如，创建一个针对Python编码问题提供答案的问答聊天机器人，你将在这门课程中完成这个任务。 在这门课程中，你将学习创建LLMOps管道的关键步骤：\n\n获取和转换用于LLM监督微调的训练数据。\n对数据和微调模型进行版本控制，以跟踪微调实验。\n配置开源的监督调整管道，然后执行该管道以训练和部署经过微调的LLM。\n输出和研究安全评分，以负责任地监控和筛选LLM应用的行为。\n在课堂上亲自尝试经过微调和部署的LLM！\n\n你将使用的工具包括BigQuery数据仓库、开源的Kubeflow Pipelines和Google Cloud。\n\n阅读文档：10分钟搞懂LLMOps\nGPU Inference optimization techniques like FlashAttention and FlashAttention-2\nLLMOps guide by DataBricks\nEfficiently serving LLMs course on DeepLearning.AI\n\n\n\n\n\n\n\n\n20 分钟带你搞懂 LLMOps\n揭秘LLMOps，高效开发大型语言模型",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "LLM ops"
    ]
  },
  {
    "objectID": "AIengineerBook/LLMops.html#学习目标",
    "href": "AIengineerBook/LLMops.html#学习目标",
    "title": "LLM ops",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用LLMops相关技能 构建 LLMops流水线。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "LLM ops"
    ]
  },
  {
    "objectID": "AIengineerBook/LLMops.html#学习活动",
    "href": "AIengineerBook/LLMops.html#学习活动",
    "title": "LLM ops",
    "section": "",
    "text": "观看视频：吴恩达《大语言模型运维|LLMOps》中英字幕\n\n视频时长：1小时20分；\n视频内容简介：你将学习LLMOps管道的预处理训练数据、监督调整和自适应监督调整管道，以训练和部署自定义LLM（Language Model Model）。这对于为特定应用创建LLM工作流程非常有用。例如，创建一个针对Python编码问题提供答案的问答聊天机器人，你将在这门课程中完成这个任务。 在这门课程中，你将学习创建LLMOps管道的关键步骤：\n\n获取和转换用于LLM监督微调的训练数据。\n对数据和微调模型进行版本控制，以跟踪微调实验。\n配置开源的监督调整管道，然后执行该管道以训练和部署经过微调的LLM。\n输出和研究安全评分，以负责任地监控和筛选LLM应用的行为。\n在课堂上亲自尝试经过微调和部署的LLM！\n\n你将使用的工具包括BigQuery数据仓库、开源的Kubeflow Pipelines和Google Cloud。\n\n阅读文档：10分钟搞懂LLMOps\nGPU Inference optimization techniques like FlashAttention and FlashAttention-2\nLLMOps guide by DataBricks\nEfficiently serving LLMs course on DeepLearning.AI",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "LLM ops"
    ]
  },
  {
    "objectID": "AIengineerBook/LLMops.html#补充资料",
    "href": "AIengineerBook/LLMops.html#补充资料",
    "title": "LLM ops",
    "section": "",
    "text": "20 分钟带你搞懂 LLMOps\n揭秘LLMOps，高效开发大型语言模型",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "LLM ops"
    ]
  },
  {
    "objectID": "AIengineerBook/agent.html",
    "href": "AIengineerBook/agent.html",
    "title": "构建agent",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n编程 实现以agent为核心的LLM应用，能够创建并管理agent，agent能够具备记忆、规划、工具使用的能力。\n\n\n\n\n\n阅读文档：基于大语言模型的AI Agents—Part 1, 基于大语言模型的AI Agents—Part 2, 基于大语言模型的AI Agents—Part 3\n阅读文档：Quickstart guide by LangChain to build agents to have a sequence of actions taken to do a job or multiple jobs.\n观看视频：吴恩达《使用LangChain的函数、工具和代理》|Functions, Tools and Agents with LangChain（GPT4-中英字幕）\n\n视频时长：1小时；\n视频内容简介：LLM（Language Model，语言模型）和支持它们的库的领域最近几个月发展迅速。本课程旨在使您了解这些变化。 您将探索新的进展，例如ChatGPT的函数调用能力，并使用一种称为LangChain表达语言（LCEL）的新语法构建对话代理，用于标记、提取、工具选择和路由等任务。 完成本课程后，您将学会如何：\n\n使用LLM生成包括函数调用在内的结构化输出；\n使用LCEL简化链式和代理的自定义，构建应用程序；\n将函数调用应用于标记和数据提取等任务；\n通过LangChain工具和LLM函数调用了解工具选择和路由 - 等等。\n\n立即开始应用这些新功能，构建和改进您的应用程序。\n\nAutogen : Framework to develop LLM applications using multiple agents that can converse with each other to solve tasks.\nCrew AI: AI Agents for real use cases.\n\n\n\n\n\n自己构思，实现一个agent应用。\n\n\n\n\n\n深入浅出LangChain与智能Agent：构建下一代AI助手",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "构建agent"
    ]
  },
  {
    "objectID": "AIengineerBook/agent.html#学习目标",
    "href": "AIengineerBook/agent.html#学习目标",
    "title": "构建agent",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n编程 实现以agent为核心的LLM应用，能够创建并管理agent，agent能够具备记忆、规划、工具使用的能力。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "构建agent"
    ]
  },
  {
    "objectID": "AIengineerBook/agent.html#学习活动",
    "href": "AIengineerBook/agent.html#学习活动",
    "title": "构建agent",
    "section": "",
    "text": "阅读文档：基于大语言模型的AI Agents—Part 1, 基于大语言模型的AI Agents—Part 2, 基于大语言模型的AI Agents—Part 3\n阅读文档：Quickstart guide by LangChain to build agents to have a sequence of actions taken to do a job or multiple jobs.\n观看视频：吴恩达《使用LangChain的函数、工具和代理》|Functions, Tools and Agents with LangChain（GPT4-中英字幕）\n\n视频时长：1小时；\n视频内容简介：LLM（Language Model，语言模型）和支持它们的库的领域最近几个月发展迅速。本课程旨在使您了解这些变化。 您将探索新的进展，例如ChatGPT的函数调用能力，并使用一种称为LangChain表达语言（LCEL）的新语法构建对话代理，用于标记、提取、工具选择和路由等任务。 完成本课程后，您将学会如何：\n\n使用LLM生成包括函数调用在内的结构化输出；\n使用LCEL简化链式和代理的自定义，构建应用程序；\n将函数调用应用于标记和数据提取等任务；\n通过LangChain工具和LLM函数调用了解工具选择和路由 - 等等。\n\n立即开始应用这些新功能，构建和改进您的应用程序。\n\nAutogen : Framework to develop LLM applications using multiple agents that can converse with each other to solve tasks.\nCrew AI: AI Agents for real use cases.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "构建agent"
    ]
  },
  {
    "objectID": "AIengineerBook/agent.html#实践",
    "href": "AIengineerBook/agent.html#实践",
    "title": "构建agent",
    "section": "",
    "text": "自己构思，实现一个agent应用。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "构建agent"
    ]
  },
  {
    "objectID": "AIengineerBook/agent.html#补充资料",
    "href": "AIengineerBook/agent.html#补充资料",
    "title": "构建agent",
    "section": "",
    "text": "深入浅出LangChain与智能Agent：构建下一代AI助手",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "构建agent"
    ]
  },
  {
    "objectID": "AIengineerBook/AI_sec.html",
    "href": "AIengineerBook/AI_sec.html",
    "title": "LLM安全",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n列举 llm常见的安全威胁；\n应用 llm red teaming方法，识别llm的漏洞并评估。\n\n\n\n\n\n语言模型 (Large Language Model，简称LLM) 安全之攻击面初探\nAI安全：LLM的风险揭示与安全性评估\nRed Teaming LLM Applications\n吴恩达《红队测试LLM应用|Red Teaming LLM Applications》中英字幕\n\n视频时长：1小时；\n视频内容简介：学习如何测试和发现LLM应用程序中的漏洞，以使它们更安全。在本课程中，您将攻击各种聊天机器人应用程序，使用提示注入来查看系统的反应并理解安全失败。LLM失败可能会导致法律责任、声誉损害和昂贵的服务中断。本课程将帮助您积极减轻这些风险。学习业界已验证的红队技术，积极测试、攻击和改进您的LLM应用程序的稳健性。 在本课程中：\n\n探索LLM性能评估的细微差别，了解基准模型和测试LLM应用程序之间的区别。\n概述基本的LLM应用程序漏洞及其如何影响实际部署。\n获得手动和自动LLM红队方法的实践经验。\n见证红队评估的完整演示，并应用课程中涵盖的概念和技术。\n\n学习完本视频后，您将对如何在自己的应用程序上实验LLM漏洞识别和评估有基本的了解。\n\nlearn to identify and evaluate vulnerabilities in LLM apps\nPlanning red teaming for large language models (LLMs) and their applications\nA detailed list of resources on LLM security highlighting all potential risks and vulnerabilities in AI applications.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "LLM安全"
    ]
  },
  {
    "objectID": "AIengineerBook/AI_sec.html#学习目标",
    "href": "AIengineerBook/AI_sec.html#学习目标",
    "title": "LLM安全",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n列举 llm常见的安全威胁；\n应用 llm red teaming方法，识别llm的漏洞并评估。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "LLM安全"
    ]
  },
  {
    "objectID": "AIengineerBook/AI_sec.html#学习活动",
    "href": "AIengineerBook/AI_sec.html#学习活动",
    "title": "LLM安全",
    "section": "",
    "text": "语言模型 (Large Language Model，简称LLM) 安全之攻击面初探\nAI安全：LLM的风险揭示与安全性评估\nRed Teaming LLM Applications\n吴恩达《红队测试LLM应用|Red Teaming LLM Applications》中英字幕\n\n视频时长：1小时；\n视频内容简介：学习如何测试和发现LLM应用程序中的漏洞，以使它们更安全。在本课程中，您将攻击各种聊天机器人应用程序，使用提示注入来查看系统的反应并理解安全失败。LLM失败可能会导致法律责任、声誉损害和昂贵的服务中断。本课程将帮助您积极减轻这些风险。学习业界已验证的红队技术，积极测试、攻击和改进您的LLM应用程序的稳健性。 在本课程中：\n\n探索LLM性能评估的细微差别，了解基准模型和测试LLM应用程序之间的区别。\n概述基本的LLM应用程序漏洞及其如何影响实际部署。\n获得手动和自动LLM红队方法的实践经验。\n见证红队评估的完整演示，并应用课程中涵盖的概念和技术。\n\n学习完本视频后，您将对如何在自己的应用程序上实验LLM漏洞识别和评估有基本的了解。\n\nlearn to identify and evaluate vulnerabilities in LLM apps\nPlanning red teaming for large language models (LLMs) and their applications\nA detailed list of resources on LLM security highlighting all potential risks and vulnerabilities in AI applications.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "LLM安全"
    ]
  },
  {
    "objectID": "AIengineerBook/beginer.html",
    "href": "AIengineerBook/beginer.html",
    "title": "初级LLM工程师",
    "section": "",
    "text": "理解 LLM 的基础知识 - 知道 ChatGPT 在高层次上是如何工作的。\n学习开发者的提示工程。如何编写提示以改善 LLM 的响应。\n学习向 LLM API 提交和接收数据，学习如何使用 JSON 数据。\n学习调用封闭和开源的 LLM 模型，函数调用，传递提示和解析响应。\n学习如何管理对话中的上下文。\n学习创建和自动化一系列操作 - 使用 langchain 的chain。\n使用 Gradio 或 Streamlit 进行基本应用程序开发，用于 POC 和演示。\n部署你的应用程序以使其可访问 - 在 HuggingFace Space 或 Streamlit Cloud 上的基本部署。\n多模态生成 - 使用 HuggingFace transformer 库进行代码、图像、音频生成。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "初级LLM工程师"
    ]
  },
  {
    "objectID": "AIengineerBook/beginer.html#初级技能",
    "href": "AIengineerBook/beginer.html#初级技能",
    "title": "初级LLM工程师",
    "section": "",
    "text": "理解 LLM 的基础知识 - 知道 ChatGPT 在高层次上是如何工作的。\n学习开发者的提示工程。如何编写提示以改善 LLM 的响应。\n学习向 LLM API 提交和接收数据，学习如何使用 JSON 数据。\n学习调用封闭和开源的 LLM 模型，函数调用，传递提示和解析响应。\n学习如何管理对话中的上下文。\n学习创建和自动化一系列操作 - 使用 langchain 的chain。\n使用 Gradio 或 Streamlit 进行基本应用程序开发，用于 POC 和演示。\n部署你的应用程序以使其可访问 - 在 HuggingFace Space 或 Streamlit Cloud 上的基本部署。\n多模态生成 - 使用 HuggingFace transformer 库进行代码、图像、音频生成。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "初级LLM工程师"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_advanced.html",
    "href": "AIengineerBook/prompt_advanced.html",
    "title": "高级prompt工程",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n编写 符合高级技巧的prompt，包括但不限于零样本提示、少样本提示、思维链(CoT)、ReAct等。\n\n\n\n\n\n阅读文档：Prompt Engineering Guide: Techniques\n\n\n\n\n\n运用高级prompt编写技巧，编写能力更强的prompt，用于解决日常工作中的复杂问题。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级prompt工程"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_advanced.html#学习目标",
    "href": "AIengineerBook/prompt_advanced.html#学习目标",
    "title": "高级prompt工程",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n编写 符合高级技巧的prompt，包括但不限于零样本提示、少样本提示、思维链(CoT)、ReAct等。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级prompt工程"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_advanced.html#学习活动",
    "href": "AIengineerBook/prompt_advanced.html#学习活动",
    "title": "高级prompt工程",
    "section": "",
    "text": "阅读文档：Prompt Engineering Guide: Techniques",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级prompt工程"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_advanced.html#实践",
    "href": "AIengineerBook/prompt_advanced.html#实践",
    "title": "高级prompt工程",
    "section": "",
    "text": "运用高级prompt编写技巧，编写能力更强的prompt，用于解决日常工作中的复杂问题。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "高级prompt工程"
    ]
  },
  {
    "objectID": "AIengineerBook/advanced_projects.html",
    "href": "AIengineerBook/advanced_projects.html",
    "title": "实践项目",
    "section": "",
    "text": "实践项目\n\n\n\n\n\n\n\n\nS.No.\nProject Idea\nSkills required / to be developed\n\n\n\n\n\nAdvanced\n\n\n\n8.\nPersonal assistant fine-tuned on domain-specific data. Personal Healthcare, Country’s Law, Finance, etc.\nDataset curation, Data engineering, model evaluation, benchmarking, PEFT, LoRA, QLoRA\n\n\n9.\nAn e2e e-commerce product assistant.\nAdvanced RAG pipeline, LLMOps - Data Engineering, CI/CD, Scaling, Monitoring, Observability\n\n\n10.\nInvestGPT - fine-tuned LLM to classify personal investments based on technical (algorithmic) and fundamental (LLMs) analysis.\nfine tuning, evals and benchmarking, AI Security\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "AIengineerBook/intro.html",
    "href": "AIengineerBook/intro.html",
    "title": "引言",
    "section": "",
    "text": "对 Python/JS 编程有中级理解。\n最好有至少 2-3 个中等复杂度应用程序的编码经验，比如使用 Flask、Rails 或 Node.js 开发的博客 Web 应用程序。\n能够熟练地阅读中英文技术文档。\n能够在像 VS Code 这样的 IDE 中熟练地编码。\n熟练使用git和GitHub。\n\n\n\n\n\n初学（\\(&lt;=\\) 1 个月）- 构建基本应用程序，学习如何使用大型语言模型（LLM）API，为你的应用程序精心设计提示，并使用开源 LLM。\n中级（约 2 个月）- 深入构建更多上下文感知的高级应用程序，使用检索增强生成（RAG）。了解向量数据库及其工作方式。学习如何使用 LLM 和工具构建智能体。\n高级（约 3 个月）- 在掌握应用程序构建之后，学习如何使用 LLMOps 在生产中部署、优化和管理 LLM 驱动的应用程序。学习如何微调预训练模型，以高效且低成本地适应下游应用程序。\n\n\n\n\n理解 LLM 的基础知识 - 你应该知道 ChatGPT 在高层次上是如何工作的。\n学习开发者的提示工程。如何编写提示以改善 LLM 的响应。\n学习向 LLM API 提交和接收数据，学习如何使用 JSON 数据。\n学习调用封闭和开源的 LLM 模型，函数调用，传递提示和解析响应。\n学习如何管理对话中的上下文。\n学习创建和自动化一系列操作 - 使用 langchain 的chain。\n使用 Gradio 或 Streamlit 进行基本应用程序开发，用于 POC 和演示。\n部署你的应用程序以使其可访问 - 在 HuggingFace Space 或 Streamlit Cloud 上的基本部署。\n多模态生成 - 使用 HuggingFace transformer 库进行代码、图像、音频生成。\n\n\n\n\n\n理解向量嵌入和向量数据库。\n学习如何为你的应用程序使用向量数据库。\n构建检索增强生成（RAG） - 与你的知识库聊天。\n开发高级 RAG 管道，如子问题查询引擎，可以在经过多个数据源后提供响应。\n构建智能体 - 迭代工作流程以完成一个大任务。\n构建多智能体应用程序，多个智能体协同工作以提供更好的解决方案。\n使用多个智能体的自动化 - Autogen 和 Crew AI\n评估 RAGs - RAGAs 框架。\n管理数据库，检索，部署完整应用程序，版本控制，记录和监控模型行为。\n\n\n\n\n\n针对特定领域知识进行预训练 LLM 的微调，以适应特定领域的知识和定制响应，如医学研究、金融研究、法律分析。\n策划数据集并设计（ETL 管道）模型微调的管道。\n评估和基准测试模型性能\nLLMOps - 使用模型注册表、可观测性和自动化测试构建完整的端到端管道。\n构建多模态应用程序 - 文本和图像的混合语义搜索\n构建 SDK、包和自定义解决方案以启用其他开发人员\n使用提示黑客技术和通过检查漏洞和潜在风险纳入防御措施来保护你的 AI 应用程序。\n\n\n\n\n\n\n效率优先：可以首先阅读各章学习目标，根据学习目标确定要学习的内容，并选择阅读的文章或观看的视频，并进行实践。当确认自己具备了学习目标里提到的基本能力后，可以先转入下一章学习，后续再来完善本章内容的更多细节。\n编码实践：每一章都需要通过编码实践来验证自己的学习效果，根据资料搭建运行环境，运行并验证核心功能。\n深入思考：如果有必要以及时间比较宽裕，需要花时间去阅读每一章的补充资料，深入地理解相关技术原理。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "引言"
    ]
  },
  {
    "objectID": "AIengineerBook/intro.html#学习llm工程技能的先决条件",
    "href": "AIengineerBook/intro.html#学习llm工程技能的先决条件",
    "title": "引言",
    "section": "",
    "text": "对 Python/JS 编程有中级理解。\n最好有至少 2-3 个中等复杂度应用程序的编码经验，比如使用 Flask、Rails 或 Node.js 开发的博客 Web 应用程序。\n能够熟练地阅读中英文技术文档。\n能够在像 VS Code 这样的 IDE 中熟练地编码。\n熟练使用git和GitHub。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "引言"
    ]
  },
  {
    "objectID": "AIengineerBook/intro.html#ai工程师的3个阶段",
    "href": "AIengineerBook/intro.html#ai工程师的3个阶段",
    "title": "引言",
    "section": "",
    "text": "初学（\\(&lt;=\\) 1 个月）- 构建基本应用程序，学习如何使用大型语言模型（LLM）API，为你的应用程序精心设计提示，并使用开源 LLM。\n中级（约 2 个月）- 深入构建更多上下文感知的高级应用程序，使用检索增强生成（RAG）。了解向量数据库及其工作方式。学习如何使用 LLM 和工具构建智能体。\n高级（约 3 个月）- 在掌握应用程序构建之后，学习如何使用 LLMOps 在生产中部署、优化和管理 LLM 驱动的应用程序。学习如何微调预训练模型，以高效且低成本地适应下游应用程序。\n\n\n\n\n理解 LLM 的基础知识 - 你应该知道 ChatGPT 在高层次上是如何工作的。\n学习开发者的提示工程。如何编写提示以改善 LLM 的响应。\n学习向 LLM API 提交和接收数据，学习如何使用 JSON 数据。\n学习调用封闭和开源的 LLM 模型，函数调用，传递提示和解析响应。\n学习如何管理对话中的上下文。\n学习创建和自动化一系列操作 - 使用 langchain 的chain。\n使用 Gradio 或 Streamlit 进行基本应用程序开发，用于 POC 和演示。\n部署你的应用程序以使其可访问 - 在 HuggingFace Space 或 Streamlit Cloud 上的基本部署。\n多模态生成 - 使用 HuggingFace transformer 库进行代码、图像、音频生成。\n\n\n\n\n\n理解向量嵌入和向量数据库。\n学习如何为你的应用程序使用向量数据库。\n构建检索增强生成（RAG） - 与你的知识库聊天。\n开发高级 RAG 管道，如子问题查询引擎，可以在经过多个数据源后提供响应。\n构建智能体 - 迭代工作流程以完成一个大任务。\n构建多智能体应用程序，多个智能体协同工作以提供更好的解决方案。\n使用多个智能体的自动化 - Autogen 和 Crew AI\n评估 RAGs - RAGAs 框架。\n管理数据库，检索，部署完整应用程序，版本控制，记录和监控模型行为。\n\n\n\n\n\n针对特定领域知识进行预训练 LLM 的微调，以适应特定领域的知识和定制响应，如医学研究、金融研究、法律分析。\n策划数据集并设计（ETL 管道）模型微调的管道。\n评估和基准测试模型性能\nLLMOps - 使用模型注册表、可观测性和自动化测试构建完整的端到端管道。\n构建多模态应用程序 - 文本和图像的混合语义搜索\n构建 SDK、包和自定义解决方案以启用其他开发人员\n使用提示黑客技术和通过检查漏洞和潜在风险纳入防御措施来保护你的 AI 应用程序。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "引言"
    ]
  },
  {
    "objectID": "AIengineerBook/intro.html#学习方法",
    "href": "AIengineerBook/intro.html#学习方法",
    "title": "引言",
    "section": "",
    "text": "效率优先：可以首先阅读各章学习目标，根据学习目标确定要学习的内容，并选择阅读的文章或观看的视频，并进行实践。当确认自己具备了学习目标里提到的基本能力后，可以先转入下一章学习，后续再来完善本章内容的更多细节。\n编码实践：每一章都需要通过编码实践来验证自己的学习效果，根据资料搭建运行环境，运行并验证核心功能。\n深入思考：如果有必要以及时间比较宽裕，需要花时间去阅读每一章的补充资料，深入地理解相关技术原理。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "引言"
    ]
  },
  {
    "objectID": "AIengineerBook/intro.html#参考资料",
    "href": "AIengineerBook/intro.html#参考资料",
    "title": "引言",
    "section": "",
    "text": "张长旺 (2024) 提供了一篇完整的路线图描述。\nTyagi (2024) 提供了github上的AI工程师学习路线路和资源列表",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "引言"
    ]
  },
  {
    "objectID": "AIengineerBook/vectorDB.html",
    "href": "AIengineerBook/vectorDB.html",
    "title": "向量嵌入和向量数据库",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n解释向量嵌入和向量数据库的概念；\n编写代码，实现创建向量库、在向量数据库中增删改查向量数据、向量数据相似性比较、数据存储及载入等功能；\n\n\n\n\n\n观看视频：吴恩达《向量数据库：从嵌入到应用》Vector Databases: from Embeddings to Applications中英字幕\n\n视频时长：1小时；\n视频内容简介：向量数据库在各个领域发挥着关键作用，如自然语言处理、图像识别、推荐系统和语义搜索，并随着越来越多的LLM采用而变得更加重要。这些数据库异常有价值，因为它们为LLM提供了实时专有数据的访问权限，从而实现了检索增强生成（RAG）应用程序的开发。在其核心，向量数据库依赖于使用嵌入来捕捉数据的含义，并衡量不同向量对之间的相似度，并筛选广泛的数据集，识别最相似的向量。 学习本视频可以获得有关何时将向量数据库应用于自己所开发的应用程序的知识。将学习以下内容：\n\n如何使用向量数据库和LLM深入了解数据。\n构建实验室，展示如何形成嵌入并使用多种搜索技术查找相似的嵌入。\n探索快速搜索大型数据集的算法，并构建从RAG到多语言搜索的应用程序。\n\n\n文档阅读：What are Vector Embeddings，向量嵌入介绍中文版\n文档阅读：langchain中的嵌入模型, langchain中Ollama支持的嵌入, langchain中Ollama嵌入api\n文档阅读：chromadb, langchain中对chroma的集成\n文档阅读：langchain中关于向量库调用的完整过程\n\n\n\n\n\n完整实践：使用langchain，创建chroma实例，并创建collection，实现对向量数据的增删改查，并比较向量相似性，存储及载入向量数据。\n\n\n\n\n\n文档阅读：SentenceTransformer可以计算句子、文本、图像的嵌入，详见SentenceTransformers。\n文档阅读：Text chunking and splitting by LangChain\n在huggingface上查看头部的嵌入模型， 点此处",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "向量嵌入和向量数据库"
    ]
  },
  {
    "objectID": "AIengineerBook/vectorDB.html#学习目标",
    "href": "AIengineerBook/vectorDB.html#学习目标",
    "title": "向量嵌入和向量数据库",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n解释向量嵌入和向量数据库的概念；\n编写代码，实现创建向量库、在向量数据库中增删改查向量数据、向量数据相似性比较、数据存储及载入等功能；",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "向量嵌入和向量数据库"
    ]
  },
  {
    "objectID": "AIengineerBook/vectorDB.html#学习活动",
    "href": "AIengineerBook/vectorDB.html#学习活动",
    "title": "向量嵌入和向量数据库",
    "section": "",
    "text": "观看视频：吴恩达《向量数据库：从嵌入到应用》Vector Databases: from Embeddings to Applications中英字幕\n\n视频时长：1小时；\n视频内容简介：向量数据库在各个领域发挥着关键作用，如自然语言处理、图像识别、推荐系统和语义搜索，并随着越来越多的LLM采用而变得更加重要。这些数据库异常有价值，因为它们为LLM提供了实时专有数据的访问权限，从而实现了检索增强生成（RAG）应用程序的开发。在其核心，向量数据库依赖于使用嵌入来捕捉数据的含义，并衡量不同向量对之间的相似度，并筛选广泛的数据集，识别最相似的向量。 学习本视频可以获得有关何时将向量数据库应用于自己所开发的应用程序的知识。将学习以下内容：\n\n如何使用向量数据库和LLM深入了解数据。\n构建实验室，展示如何形成嵌入并使用多种搜索技术查找相似的嵌入。\n探索快速搜索大型数据集的算法，并构建从RAG到多语言搜索的应用程序。\n\n\n文档阅读：What are Vector Embeddings，向量嵌入介绍中文版\n文档阅读：langchain中的嵌入模型, langchain中Ollama支持的嵌入, langchain中Ollama嵌入api\n文档阅读：chromadb, langchain中对chroma的集成\n文档阅读：langchain中关于向量库调用的完整过程",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "向量嵌入和向量数据库"
    ]
  },
  {
    "objectID": "AIengineerBook/vectorDB.html#实践",
    "href": "AIengineerBook/vectorDB.html#实践",
    "title": "向量嵌入和向量数据库",
    "section": "",
    "text": "完整实践：使用langchain，创建chroma实例，并创建collection，实现对向量数据的增删改查，并比较向量相似性，存储及载入向量数据。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "向量嵌入和向量数据库"
    ]
  },
  {
    "objectID": "AIengineerBook/vectorDB.html#补充资料",
    "href": "AIengineerBook/vectorDB.html#补充资料",
    "title": "向量嵌入和向量数据库",
    "section": "",
    "text": "文档阅读：SentenceTransformer可以计算句子、文本、图像的嵌入，详见SentenceTransformers。\n文档阅读：Text chunking and splitting by LangChain\n在huggingface上查看头部的嵌入模型， 点此处",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "向量嵌入和向量数据库"
    ]
  },
  {
    "objectID": "AIengineerBook/intermediate.html",
    "href": "AIengineerBook/intermediate.html",
    "title": "中级LLM工程师",
    "section": "",
    "text": "理解向量嵌入和向量数据库。\n学习如何为你的应用程序使用向量数据库。\n构建检索增强生成（RAG） - 与你的知识库聊天。\n开发高级 RAG 管道，如子问题查询引擎，可以在经过多个数据源后提供响应。\n构建智能体 - 迭代工作流程以完成一个大任务。\n构建多智能体应用程序，多个智能体协同工作以提供更好的解决方案。\n使用多个智能体的自动化 - Autogen 和 Crew AI\n评估 RAGs - RAGAs 框架。\n管理数据库，检索，部署完整应用程序，版本控制，记录和监控模型行为。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "中级LLM工程师"
    ]
  },
  {
    "objectID": "AIengineerBook/intermediate.html#中级技能",
    "href": "AIengineerBook/intermediate.html#中级技能",
    "title": "中级LLM工程师",
    "section": "",
    "text": "理解向量嵌入和向量数据库。\n学习如何为你的应用程序使用向量数据库。\n构建检索增强生成（RAG） - 与你的知识库聊天。\n开发高级 RAG 管道，如子问题查询引擎，可以在经过多个数据源后提供响应。\n构建智能体 - 迭代工作流程以完成一个大任务。\n构建多智能体应用程序，多个智能体协同工作以提供更好的解决方案。\n使用多个智能体的自动化 - Autogen 和 Crew AI\n评估 RAGs - RAGAs 框架。\n管理数据库，检索，部署完整应用程序，版本控制，记录和监控模型行为。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "中级LLM工程师"
    ]
  },
  {
    "objectID": "mybook/summary.html",
    "href": "mybook/summary.html",
    "title": "Summary",
    "section": "",
    "text": "Summary\nIn summary, this book has no content whatsoever.\n\n\n\n\n Back to top"
  },
  {
    "objectID": "mybook/intro.html",
    "href": "mybook/intro.html",
    "title": "Introduction",
    "section": "",
    "text": "Introduction\nThis is a book created from markdown and executable code.\nSee Knuth (1984) for additional discussion of literate programming.\n\n\n\n\n\n Back to topReferences\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "mybook/index.html",
    "href": "mybook/index.html",
    "title": "待完善",
    "section": "",
    "text": "待完善\n\n\n\n\n Back to top",
    "crumbs": [
      "Tutorials",
      "其它",
      "待完善"
    ]
  },
  {
    "objectID": "mybook/references.html",
    "href": "mybook/references.html",
    "title": "References",
    "section": "",
    "text": "References\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "AIengineerBook/LLM_usage.html",
    "href": "AIengineerBook/LLM_usage.html",
    "title": "运行并使用LLM",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n安装 ollama，以命令行方式通过ollama下载 某LLM，与该LLM进行对话\n使用 ollama的各项功能，如导入模型、制作modelfile等；\n安装 open webUI，完成配置，与某LLM进行对话。\n使用python 调用 ollama API，完成对话。\n\n\n\n\n\n阅读并操作：ollama安装、使用和学习\n\n阅读：ollama github, ollama部署指南\n操作：在本机上安装ollama，在命令行中通过ollama pull命令拉取模型，通过ollama run命令运行模型。\n扩展体验：\n\n在命令行中运行ollama -h，查看ollama命令的用法，并逐一试验；\n阅读ollama官网，查看可用model列表，并选择部分model阅读其说明；\n阅读ollama文档，学习ollama如何导入模型，如何制作modelfile，如何通过网络访问其API等内容；\n将ollama 资源库clone到本地，学习examples目录下的代码。\n学习langchain调用ollama，使用python调用ollama。\n\n\n阅读并操作：open webUI安装、使用和学习\n\n阅读：open webui github, open webUI quick start, ollama和open webUI运行llama3\n操作：在已安装ollama后，安装或通过docker运行open webUI，体验在open webUI上运行ollama。\n扩展体验\n\n阅读open webUI文档并体验。\n\n\n\n\n\n\n\n构建ollama服务，使用python调用API，传递提示和解析响应。\n\n\n\n\n\n大语言模型下的JSON数据格式交互",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "运行并使用LLM"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_usage.html#学习目标",
    "href": "AIengineerBook/LLM_usage.html#学习目标",
    "title": "运行并使用LLM",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n安装 ollama，以命令行方式通过ollama下载 某LLM，与该LLM进行对话\n使用 ollama的各项功能，如导入模型、制作modelfile等；\n安装 open webUI，完成配置，与某LLM进行对话。\n使用python 调用 ollama API，完成对话。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "运行并使用LLM"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_usage.html#学习",
    "href": "AIengineerBook/LLM_usage.html#学习",
    "title": "运行并使用LLM",
    "section": "",
    "text": "阅读并操作：ollama安装、使用和学习\n\n阅读：ollama github, ollama部署指南\n操作：在本机上安装ollama，在命令行中通过ollama pull命令拉取模型，通过ollama run命令运行模型。\n扩展体验：\n\n在命令行中运行ollama -h，查看ollama命令的用法，并逐一试验；\n阅读ollama官网，查看可用model列表，并选择部分model阅读其说明；\n阅读ollama文档，学习ollama如何导入模型，如何制作modelfile，如何通过网络访问其API等内容；\n将ollama 资源库clone到本地，学习examples目录下的代码。\n学习langchain调用ollama，使用python调用ollama。\n\n\n阅读并操作：open webUI安装、使用和学习\n\n阅读：open webui github, open webUI quick start, ollama和open webUI运行llama3\n操作：在已安装ollama后，安装或通过docker运行open webUI，体验在open webUI上运行ollama。\n扩展体验\n\n阅读open webUI文档并体验。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "运行并使用LLM"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_usage.html#实践",
    "href": "AIengineerBook/LLM_usage.html#实践",
    "title": "运行并使用LLM",
    "section": "",
    "text": "构建ollama服务，使用python调用API，传递提示和解析响应。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "运行并使用LLM"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_usage.html#补充资料",
    "href": "AIengineerBook/LLM_usage.html#补充资料",
    "title": "运行并使用LLM",
    "section": "",
    "text": "大语言模型下的JSON数据格式交互",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "运行并使用LLM"
    ]
  },
  {
    "objectID": "AIengineerBook/intermediate_projects.html",
    "href": "AIengineerBook/intermediate_projects.html",
    "title": "实践项目",
    "section": "",
    "text": "实践项目\n\n\n\n\n\n\n\n\nS.No.\nProject Idea\nSkills required / to be developed\n\n\n\n\n\nIntermediate\n\n\n\n5.\nQ&A bot for specific persona / department - Doctor / Lawyer / Engineer, Marketer, Sales etc.\ntext splitting, chunking, indexing, working with vector databases, building RAG pipelines, deploying apps\n\n\n6.\nStackOverflow-like search engine that provides response from multiple data sources - Advanced RAG pipeline to answer complex query using multiple data sources.\nAll above and vector retrieval, summary retrieval, sub-question query engine, deploying apps\n\n\n7.\nAI Interview Buddy - an AI agent that helps in preparing for specific roles in an interactive manner.\nBuilding agents, agentic design, text-to-speech, speech-to-text, deployment\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "AIengineerBook/multimodal.html",
    "href": "AIengineerBook/multimodal.html",
    "title": "多模态（制作中.）",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n\n\n\n\nBuilding hybrid search apps with vector databases like Pinecone\n\n\nCookbook for multimodal RAG pipelines"
  },
  {
    "objectID": "AIengineerBook/multimodal.html#学习目标",
    "href": "AIengineerBook/multimodal.html#学习目标",
    "title": "多模态（制作中.）",
    "section": "",
    "text": "学习完本部分，使学习者能够："
  },
  {
    "objectID": "AIengineerBook/multimodal.html#学习活动",
    "href": "AIengineerBook/multimodal.html#学习活动",
    "title": "多模态（制作中.）",
    "section": "",
    "text": "Building hybrid search apps with vector databases like Pinecone\n\n\nCookbook for multimodal RAG pipelines"
  },
  {
    "objectID": "AIengineerBook/LLM_basic.html",
    "href": "AIengineerBook/LLM_basic.html",
    "title": "大语言模型基础",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n解释 什么是大语言模型；\n阐述 大语言模型的工作原理；\n列举 大语言模型的应用。\n\n\n\n\n\n观看视频：大语言模型简介\n\n视频时长：约5分钟\n视频内容提要：\n\n什么是LLM；\nLLM的工作原理；\nLLM的商业应用。\n\n\n观看视频：google出品的大语言模型简介\n\n视频时长：约15分钟\n视频内容提要：\n\n定义大语言模型；\n描述大语言模型用例；\n解释提示微调；\n描述生成式AI开发工具。\n\n\n\n\n\n\n\n用自己的话，向不具备LLM基础的人介绍大语言模型，并获得反馈。\n\n\n\n\n\n参考：A Practical Introduction to Large Language Models (LLMs) by Shaw Talebi\n参考：Andrej Karpathy一小时交流-大语言模型介绍\n参考：李宏毅生成式AI课程\n参考：微软generative-ai-for-beginners课程\n参考：复旦大学LLM课程\n参考：Large Language Model Cheat Sheet",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "大语言模型基础"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_basic.html#学习目标",
    "href": "AIengineerBook/LLM_basic.html#学习目标",
    "title": "大语言模型基础",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n解释 什么是大语言模型；\n阐述 大语言模型的工作原理；\n列举 大语言模型的应用。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "大语言模型基础"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_basic.html#学习",
    "href": "AIengineerBook/LLM_basic.html#学习",
    "title": "大语言模型基础",
    "section": "",
    "text": "观看视频：大语言模型简介\n\n视频时长：约5分钟\n视频内容提要：\n\n什么是LLM；\nLLM的工作原理；\nLLM的商业应用。\n\n\n观看视频：google出品的大语言模型简介\n\n视频时长：约15分钟\n视频内容提要：\n\n定义大语言模型；\n描述大语言模型用例；\n解释提示微调；\n描述生成式AI开发工具。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "大语言模型基础"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_basic.html#实践",
    "href": "AIengineerBook/LLM_basic.html#实践",
    "title": "大语言模型基础",
    "section": "",
    "text": "用自己的话，向不具备LLM基础的人介绍大语言模型，并获得反馈。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "大语言模型基础"
    ]
  },
  {
    "objectID": "AIengineerBook/LLM_basic.html#补充资料",
    "href": "AIengineerBook/LLM_basic.html#补充资料",
    "title": "大语言模型基础",
    "section": "",
    "text": "参考：A Practical Introduction to Large Language Models (LLMs) by Shaw Talebi\n参考：Andrej Karpathy一小时交流-大语言模型介绍\n参考：李宏毅生成式AI课程\n参考：微软generative-ai-for-beginners课程\n参考：复旦大学LLM课程\n参考：Large Language Model Cheat Sheet",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "大语言模型基础"
    ]
  },
  {
    "objectID": "AIengineerBook/beginner_projects.html",
    "href": "AIengineerBook/beginner_projects.html",
    "title": "实践项目",
    "section": "",
    "text": "实践项目\n\n\n\n\n\n\n\n\nNo.\n项目\n所需技能\n\n\n\n\n\n初级\n\n\n\n1.\nBuilding a chatGPT / Midjourney -like bot for a niche persona / use-case and integrate it with WhatsApp or Slack or Discord or build an app using Streamlit / Gradio.\nLLMs, Prompt Engineering, open-source LLMs, Working with APIs, Python\n\n\n2.\nChrome extension to summarise / ideate / extract takeaways / research with web pages.\nLLM APIs, Prompt Engineering, open-source LLMs, Working with API, JS, HTML,CSS\n\n\n3.\nCreate a news aggregator for a targeted persona (PMs, AI Engg., )\nWeb Parsing, Prompt Engineering, LLMs\n\n\n4.\nMulti-modal generation via Discord.\nAll of above and Multi-modal generation\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "AIengineerBook/langchain_usage.html",
    "href": "AIengineerBook/langchain_usage.html",
    "title": "langchain使用",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用langchain的主要概念, 包括：模型、chain、memory、prompt等, 编写 基于命令行的简单LLM应用程序。\n\n\n\n\n\n观看文档：langchain初探，langchain中调用ollama作为llm\n观看视频：吴恩达《用于LLM应用程序开发的LangChain》|langchain-for-llm-application-development|中英字幕\n\n视频时长：约1小时\n视频内容简介：学习使用LangChain框架扩展语言模型在应用程序开发中的用例和能力所必需的技能。在本课程中，将学习并获得以下主题的经验：\n\n模型、提示和解析器：调用LLM，提供提示和解析响应\nLLM的记忆：存储对话和管理有限上下文空间的记忆\n链：创建操作序列\n文档中的问答：将LLM应用于您的专有数据和用例要求\n代理：探索LLM作为推理代理的强大新兴开发。\n\n在课程结束时，您将拥有一个可作为扩散模型探索的起点的模型，用于您的应用程序。 这一小时的课程将极大地扩展利用强大的语言模型的可能性，使学习者可以在几个小时内创建非常强大的应用程序。\n视频来源：https://www.deeplearning.ai/short-courses/langchain-for-llm-application-development/\n\n\n\n\n\n\n使用langchain编写一个基于命令行的简单LLM应用，功能自选，比如对话、翻译、生成提纲等。\n\n\n\n\n\n从API到Agent：万字长文洞悉LangChain工程化设计",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "langchain使用"
    ]
  },
  {
    "objectID": "AIengineerBook/langchain_usage.html#学习目标",
    "href": "AIengineerBook/langchain_usage.html#学习目标",
    "title": "langchain使用",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用langchain的主要概念, 包括：模型、chain、memory、prompt等, 编写 基于命令行的简单LLM应用程序。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "langchain使用"
    ]
  },
  {
    "objectID": "AIengineerBook/langchain_usage.html#学习活动",
    "href": "AIengineerBook/langchain_usage.html#学习活动",
    "title": "langchain使用",
    "section": "",
    "text": "观看文档：langchain初探，langchain中调用ollama作为llm\n观看视频：吴恩达《用于LLM应用程序开发的LangChain》|langchain-for-llm-application-development|中英字幕\n\n视频时长：约1小时\n视频内容简介：学习使用LangChain框架扩展语言模型在应用程序开发中的用例和能力所必需的技能。在本课程中，将学习并获得以下主题的经验：\n\n模型、提示和解析器：调用LLM，提供提示和解析响应\nLLM的记忆：存储对话和管理有限上下文空间的记忆\n链：创建操作序列\n文档中的问答：将LLM应用于您的专有数据和用例要求\n代理：探索LLM作为推理代理的强大新兴开发。\n\n在课程结束时，您将拥有一个可作为扩散模型探索的起点的模型，用于您的应用程序。 这一小时的课程将极大地扩展利用强大的语言模型的可能性，使学习者可以在几个小时内创建非常强大的应用程序。\n视频来源：https://www.deeplearning.ai/short-courses/langchain-for-llm-application-development/",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "langchain使用"
    ]
  },
  {
    "objectID": "AIengineerBook/langchain_usage.html#实践",
    "href": "AIengineerBook/langchain_usage.html#实践",
    "title": "langchain使用",
    "section": "",
    "text": "使用langchain编写一个基于命令行的简单LLM应用，功能自选，比如对话、翻译、生成提纲等。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "langchain使用"
    ]
  },
  {
    "objectID": "AIengineerBook/langchain_usage.html#补充资料",
    "href": "AIengineerBook/langchain_usage.html#补充资料",
    "title": "langchain使用",
    "section": "",
    "text": "从API到Agent：万字长文洞悉LangChain工程化设计",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "langchain使用"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_evaluation.html",
    "href": "AIengineerBook/RAG_evaluation.html",
    "title": "RAG评估",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n评估 不同RAG应用的性能。\n\n\n\n\n\nHugging Face Cookbook on How to evaluate RAG system\n阅读文档：Evaluating all components of your RAG pipeline\n阅读文档：RAGAS framework to evaluate RAG pipelines.\n\n\n\n\n\n选择适当的开源或自研RAG应用，评估其性能。\n\n\n\n\n\n如何评估一个RAG（检索增强生成）系统\n一文了解RAG评估方法、工具与指标\n关于 RAG 评估体系的见解",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG评估"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_evaluation.html#学习目标",
    "href": "AIengineerBook/RAG_evaluation.html#学习目标",
    "title": "RAG评估",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n评估 不同RAG应用的性能。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG评估"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_evaluation.html#学习活动",
    "href": "AIengineerBook/RAG_evaluation.html#学习活动",
    "title": "RAG评估",
    "section": "",
    "text": "Hugging Face Cookbook on How to evaluate RAG system\n阅读文档：Evaluating all components of your RAG pipeline\n阅读文档：RAGAS framework to evaluate RAG pipelines.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG评估"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_evaluation.html#实践",
    "href": "AIengineerBook/RAG_evaluation.html#实践",
    "title": "RAG评估",
    "section": "",
    "text": "选择适当的开源或自研RAG应用，评估其性能。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG评估"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_evaluation.html#补充资料",
    "href": "AIengineerBook/RAG_evaluation.html#补充资料",
    "title": "RAG评估",
    "section": "",
    "text": "如何评估一个RAG（检索增强生成）系统\n一文了解RAG评估方法、工具与指标\n关于 RAG 评估体系的见解",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG评估"
    ]
  },
  {
    "objectID": "AIengineerBook/index.html",
    "href": "AIengineerBook/index.html",
    "title": "前言",
    "section": "",
    "text": "本教程介绍一个研发工程师（侧重python语言）如何成为一个具备LLM应用开发能力的工程师，也即LLM工程师。\nLLM工程师应当擅长创建LLM驱动的应用程序，专注于最大化模型能力并优化大型语言模型（LLMs）的工作流程。\n\n\n本教程参考了以下资料，并在此基础上补充若干内容成文，在此感谢相关作者。\n\n张长旺 (2024) 提供了一篇完整的路线图描述。\nTyagi (2024) 提供了github上的AI工程师学习路线路和资源列表\n\n\n\n\n引用本教程请注明以下信息。\n@article{lj2024,\n  author = {龙军},\n  title = {LLM工程师速成指南},\n  year = {2024},\n  url = {https://jdragonnudt.github.io/inspiraHub/AIengineerBook/},\n}",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "前言"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_app.html",
    "href": "AIengineerBook/RAG_app.html",
    "title": "RAG应用开发",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n实现完整的RAG应用程序。\n\n\n\n\n\n阅读文档：RAG简介, 动手做一个最小RAG——TinyRAG, 通过 Llama3 和 ChromaDB 实现精确的文档查询\n观看视频：吴恩达《使用向量数据库构建应用程序|Building Applications with Vector Databases》中英字幕\n\n视频时长：1小时；\n视频内容简介：向量数据库使用嵌入来捕获数据的含义，评估不同向量对之间的相似性，并浏览大型数据集以识别最相似的向量。在大型语言模型的背景下，向量数据库的主要用途是检索增强生成（RAG），其中文本嵌入被存储和检索用于特定查询。 然而，向量数据库的多功能性不仅限于RAG，还可以快速构建各种应用程序，几乎不需要编码。 在这门课程中，您将探讨使用向量数据库实现六个应用程序的方法：\n\n语义搜索：创建一个搜索工具，超越关键词匹配，侧重于内容的含义，以便在用户问答数据集上进行高效的基于文本的搜索。\nRAG：通过合并模型未经过训练的来源的内容（例如使用Wikipedia数据集回答问题）来增强您的LLM应用程序。\n推荐系统：开发一个将语义搜索和RAG结合起来的系统，以推荐主题，并使用新闻文章数据集进行演示。\n混合搜索：构建一个应用程序，使用图像和描述性文本来查找物品，以电子商务数据集为例。\n面部相似性：创建一个应用程序，用于比较面部特征，使用公众人物数据库来确定它们之间的相似性。\n异常检测：了解如何构建一个异常检测应用程序，用于识别网络通信日志中的异常模式。\n您将具备使用任何向量数据库构建应用程序的新想法。\n\n\n阅读文档：用langchain构建RAG应用\n阅读文档：用langchain构建本地RAG应用\n\n\n\n\n\n使用langchain、chromdb完整构造一个RAG应用，能够从文本、网页、pdf等文件形式中读入数据，选择合适的文本分片方式，存入向量数据库，能够选择合适的检索模块，能在对话中检索出相应文本并作答。\n\n\n\n\n\n观看视频：吴恩达最新《大型语言模型与语义搜索》|Large Language Models with Semantic search|中英字幕\n\n视频时长：1小时；\n视频内容简介：本课程教授利用LLM进行搜索所需的技术。 在整个课程中,您将探索密集检索等关键概念,它提升了检索到的信息的相关性,从而导致改进的搜索结果,超越了传统的关键词搜索,以及重新排名,它将LLM的智能注入您的搜索系统,使其更快更有效。 完成课程后,您将:\n\n了解如何实现基本的关键词搜索,这是许多搜索系统在语言模型变得可访问之前的基础。\n使用重新排名方法增强关键词搜索,该方法根据与查询的相关性对最佳响应进行排名。\n通过使用嵌入(一种强大的自然语言处理工具)来实现密集检索,该工具使用文本的实际语义含义来进行搜索,并极大地改进了结果。 通过处理大量数据获得实际操作练习,并克服诸如变化的搜索结果和准确性等挑战。 将基于语言模型的搜索实现到您的网站或项目中。\n\n\n文档阅读：RAG技术全解析\nRAG applications are all about building connections between tools, databases, context lengths, embeddings, memories, etc. You need frameworks like LangChain, LlamaIndex, FastRAG to build these.\nStep-by-step tutorial to build a Q&A RAG pipeline by LangChain\nLangChain’s RAG from Scratch playlist on YouTube is pretty detailed and amazing.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_app.html#学习目标",
    "href": "AIengineerBook/RAG_app.html#学习目标",
    "title": "RAG应用开发",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n实现完整的RAG应用程序。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_app.html#学习活动",
    "href": "AIengineerBook/RAG_app.html#学习活动",
    "title": "RAG应用开发",
    "section": "",
    "text": "阅读文档：RAG简介, 动手做一个最小RAG——TinyRAG, 通过 Llama3 和 ChromaDB 实现精确的文档查询\n观看视频：吴恩达《使用向量数据库构建应用程序|Building Applications with Vector Databases》中英字幕\n\n视频时长：1小时；\n视频内容简介：向量数据库使用嵌入来捕获数据的含义，评估不同向量对之间的相似性，并浏览大型数据集以识别最相似的向量。在大型语言模型的背景下，向量数据库的主要用途是检索增强生成（RAG），其中文本嵌入被存储和检索用于特定查询。 然而，向量数据库的多功能性不仅限于RAG，还可以快速构建各种应用程序，几乎不需要编码。 在这门课程中，您将探讨使用向量数据库实现六个应用程序的方法：\n\n语义搜索：创建一个搜索工具，超越关键词匹配，侧重于内容的含义，以便在用户问答数据集上进行高效的基于文本的搜索。\nRAG：通过合并模型未经过训练的来源的内容（例如使用Wikipedia数据集回答问题）来增强您的LLM应用程序。\n推荐系统：开发一个将语义搜索和RAG结合起来的系统，以推荐主题，并使用新闻文章数据集进行演示。\n混合搜索：构建一个应用程序，使用图像和描述性文本来查找物品，以电子商务数据集为例。\n面部相似性：创建一个应用程序，用于比较面部特征，使用公众人物数据库来确定它们之间的相似性。\n异常检测：了解如何构建一个异常检测应用程序，用于识别网络通信日志中的异常模式。\n您将具备使用任何向量数据库构建应用程序的新想法。\n\n\n阅读文档：用langchain构建RAG应用\n阅读文档：用langchain构建本地RAG应用",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_app.html#实践",
    "href": "AIengineerBook/RAG_app.html#实践",
    "title": "RAG应用开发",
    "section": "",
    "text": "使用langchain、chromdb完整构造一个RAG应用，能够从文本、网页、pdf等文件形式中读入数据，选择合适的文本分片方式，存入向量数据库，能够选择合适的检索模块，能在对话中检索出相应文本并作答。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/RAG_app.html#补充资料",
    "href": "AIengineerBook/RAG_app.html#补充资料",
    "title": "RAG应用开发",
    "section": "",
    "text": "观看视频：吴恩达最新《大型语言模型与语义搜索》|Large Language Models with Semantic search|中英字幕\n\n视频时长：1小时；\n视频内容简介：本课程教授利用LLM进行搜索所需的技术。 在整个课程中,您将探索密集检索等关键概念,它提升了检索到的信息的相关性,从而导致改进的搜索结果,超越了传统的关键词搜索,以及重新排名,它将LLM的智能注入您的搜索系统,使其更快更有效。 完成课程后,您将:\n\n了解如何实现基本的关键词搜索,这是许多搜索系统在语言模型变得可访问之前的基础。\n使用重新排名方法增强关键词搜索,该方法根据与查询的相关性对最佳响应进行排名。\n通过使用嵌入(一种强大的自然语言处理工具)来实现密集检索,该工具使用文本的实际语义含义来进行搜索,并极大地改进了结果。 通过处理大量数据获得实际操作练习,并克服诸如变化的搜索结果和准确性等挑战。 将基于语言模型的搜索实现到您的网站或项目中。\n\n\n文档阅读：RAG技术全解析\nRAG applications are all about building connections between tools, databases, context lengths, embeddings, memories, etc. You need frameworks like LangChain, LlamaIndex, FastRAG to build these.\nStep-by-step tutorial to build a Q&A RAG pipeline by LangChain\nLangChain’s RAG from Scratch playlist on YouTube is pretty detailed and amazing.",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "中级",
      "RAG应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/finetune.html",
    "href": "AIengineerBook/finetune.html",
    "title": "微调",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n准备整理微调数据集；\n使用工具对开源llm进行 微调 。\n\n\n\n\n\n观看视频：Andrej在微软Build大会上解析ChatGPT演讲\n观看视频：吴恩达《微调大型语言模型》| Finetuning Large Language Models（中英字幕）\n\n视频时长：1小时\n视频内容简介：完成这门课程后，您将能够：\n\n了解何时在LLM上应用微调\n为微调准备您的数据 在您的数据上训练和评估LLM\n通过微调，您可以使用自己的数据对模型进行训练，并更新LLM中的神经网络权重，从而改变模型与提示工程和检索增强生成等其他方法的差异。细调可以使模型学习风格、形式，并通过更新模型以获取新知识来改善结果。\n\n视频来源：Deeplearing.ai的课程Finetuning Large Language Models\n\n阅读文档：llama factory 使用指南\nA Beginner’s Guide to LLM Fine-Tuning is a detailed guide on finetuning LLMs\nA very detailed and simplified read on how to fine-tune LLMs with Hugging Face by Philipp Schmid\n4-part blog series by Anyscale is a comprehensive guide on fine tuning and serving LLMs.\nFine-Tune Your Own Llama 2 Model in a Colab Notebook\nLLM Datasets for finetuning\n\n\n\n\n\n\n\n\n视频：Andrej Karpathy在微软Build大会上解析ChatGPT演讲\n视频：从零开始训练一个大语言模型30分钟讲座 by Shaw Talebi\n视频：2024大语言模型构建小指南 by Thomas Wolf\n\n视频时长：1小时20分\n视频内容简介：\n\n00:00:00 介绍 00:00:59 大语言模型的工作流程\n第一部分：训练：数据 00:01:17 数据准备 - 介绍和近期数据准备的良好资源 00:05:28 网络规模的预训练语料库 - 目标和挑战 00:11:29 网络规模数据源 - 关注近期数据集 00:18:01 语言和质量过滤 00:24:34 数据去重深入探讨 00:27:40 训练前的数据最终准备 00:31:31 如何大规模评估数据质量 00:36:29 datatrove和lighteval库\n第二部分：训练：建模 00:38:18 大语言模型训练的建模技术介绍 00:39:09 模型过大时：并行处理 00:40:00 数据并行 00:41:18 张量并行 00:44:38 管道并行 00:47:00 序列并行和4D并行的参考资料 00:47:52 同步：GPU-CPU和GPU-GPU的挑战 00:52:14 Flash Attentionv1和v2 00:56:23 稳定训练配方 00:59:12 新架构：专家混合（MoE） 01:03:13 新架构：Mamba 01:04:49 nanotron库\n第三部分：微调：强化学习人类反馈（RLHF）和对齐 01:06:15 2024年的RLHF 01:08:23 PPO、DPO和REINFORCE\n第四部分：快速推理技术 01:11:23 量化、猜测解码和编译：概述和资源\n\n\nnotebook：在单个 GPU 上针对自定义代码微调代码 LLM",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "微调"
    ]
  },
  {
    "objectID": "AIengineerBook/finetune.html#学习目标",
    "href": "AIengineerBook/finetune.html#学习目标",
    "title": "微调",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n准备整理微调数据集；\n使用工具对开源llm进行 微调 。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "微调"
    ]
  },
  {
    "objectID": "AIengineerBook/finetune.html#学习活动",
    "href": "AIengineerBook/finetune.html#学习活动",
    "title": "微调",
    "section": "",
    "text": "观看视频：Andrej在微软Build大会上解析ChatGPT演讲\n观看视频：吴恩达《微调大型语言模型》| Finetuning Large Language Models（中英字幕）\n\n视频时长：1小时\n视频内容简介：完成这门课程后，您将能够：\n\n了解何时在LLM上应用微调\n为微调准备您的数据 在您的数据上训练和评估LLM\n通过微调，您可以使用自己的数据对模型进行训练，并更新LLM中的神经网络权重，从而改变模型与提示工程和检索增强生成等其他方法的差异。细调可以使模型学习风格、形式，并通过更新模型以获取新知识来改善结果。\n\n视频来源：Deeplearing.ai的课程Finetuning Large Language Models\n\n阅读文档：llama factory 使用指南\nA Beginner’s Guide to LLM Fine-Tuning is a detailed guide on finetuning LLMs\nA very detailed and simplified read on how to fine-tune LLMs with Hugging Face by Philipp Schmid\n4-part blog series by Anyscale is a comprehensive guide on fine tuning and serving LLMs.\nFine-Tune Your Own Llama 2 Model in a Colab Notebook\nLLM Datasets for finetuning",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "微调"
    ]
  },
  {
    "objectID": "AIengineerBook/finetune.html#补充资料",
    "href": "AIengineerBook/finetune.html#补充资料",
    "title": "微调",
    "section": "",
    "text": "视频：Andrej Karpathy在微软Build大会上解析ChatGPT演讲\n视频：从零开始训练一个大语言模型30分钟讲座 by Shaw Talebi\n视频：2024大语言模型构建小指南 by Thomas Wolf\n\n视频时长：1小时20分\n视频内容简介：\n\n00:00:00 介绍 00:00:59 大语言模型的工作流程\n第一部分：训练：数据 00:01:17 数据准备 - 介绍和近期数据准备的良好资源 00:05:28 网络规模的预训练语料库 - 目标和挑战 00:11:29 网络规模数据源 - 关注近期数据集 00:18:01 语言和质量过滤 00:24:34 数据去重深入探讨 00:27:40 训练前的数据最终准备 00:31:31 如何大规模评估数据质量 00:36:29 datatrove和lighteval库\n第二部分：训练：建模 00:38:18 大语言模型训练的建模技术介绍 00:39:09 模型过大时：并行处理 00:40:00 数据并行 00:41:18 张量并行 00:44:38 管道并行 00:47:00 序列并行和4D并行的参考资料 00:47:52 同步：GPU-CPU和GPU-GPU的挑战 00:52:14 Flash Attentionv1和v2 00:56:23 稳定训练配方 00:59:12 新架构：专家混合（MoE） 01:03:13 新架构：Mamba 01:04:49 nanotron库\n第三部分：微调：强化学习人类反馈（RLHF）和对齐 01:06:15 2024年的RLHF 01:08:23 PPO、DPO和REINFORCE\n第四部分：快速推理技术 01:11:23 量化、猜测解码和编译：概述和资源\n\n\nnotebook：在单个 GPU 上针对自定义代码微调代码 LLM",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "微调"
    ]
  },
  {
    "objectID": "AIengineerBook/advanced.html",
    "href": "AIengineerBook/advanced.html",
    "title": "高级LLM工程师",
    "section": "",
    "text": "针对特定领域知识进行预训练 LLM 的微调，以适应特定领域的知识和定制响应，如医学研究、金融研究、法律分析。\n策划数据集并设计（ETL 管道）模型微调的管道。\n评估和基准测试模型性能\nLLMOps - 使用模型注册表、可观测性和自动化测试构建完整的端到端管道。\n构建多模态应用程序 - 文本和图像的混合语义搜索\n构建 SDK、包和自定义解决方案以启用其他开发人员\n使用提示黑客技术和通过检查漏洞和潜在风险纳入防御措施来保护你的 AI 应用程序。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "高级LLM工程师"
    ]
  },
  {
    "objectID": "AIengineerBook/advanced.html#高级技能",
    "href": "AIengineerBook/advanced.html#高级技能",
    "title": "高级LLM工程师",
    "section": "",
    "text": "针对特定领域知识进行预训练 LLM 的微调，以适应特定领域的知识和定制响应，如医学研究、金融研究、法律分析。\n策划数据集并设计（ETL 管道）模型微调的管道。\n评估和基准测试模型性能\nLLMOps - 使用模型注册表、可观测性和自动化测试构建完整的端到端管道。\n构建多模态应用程序 - 文本和图像的混合语义搜索\n构建 SDK、包和自定义解决方案以启用其他开发人员\n使用提示黑客技术和通过检查漏洞和潜在风险纳入防御措施来保护你的 AI 应用程序。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "高级",
      "高级LLM工程师"
    ]
  },
  {
    "objectID": "AIengineerBook/appdev.html",
    "href": "AIengineerBook/appdev.html",
    "title": "简单LLM应用开发",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用gradio或streamlit，编写 简单的LLM应用程序界面。\n\n\n\n\n\n观看视频：吴恩达《使用Gradio构建生成式人工智能应用程序/Building Generative AI Applications with Gradio》\n\n视频时长：约1小时\n视频内容简介：使用Gradio构建生成式AI应用程序.可以学习到：\n\n使用几行代码创建一个用户友好的应用程序（适用于非编码人员），以输入文本，使用开源的大型语言模型进行摘要，并在应用程序中显示摘要。\n创建一个允许用户上传图像的应用程序，该应用程序使用图像到文本（图像字幕）来描述已上传的图像，并在应用程序中显示图像和字幕。\n创建一个使用扩散模型生成图像的应用程序，然后在应用程序中显示生成的图像。\n结合前两个课程中所学的知识：上传图像，为图像加上字幕，然后使用字幕生成一个新图像。\n创建一个与开源LLM聊天的界面，使用Falcon，这是开源LLM排行榜上排名最高的LLM之一。\n\n在本课程结束时，将获得实用的知识，以快速构建交互式应用程序和演示文稿，以验证自己的项目并更快地发布。\n视频来源：https://www.deeplearning.ai/short-courses/building-generative-ai-applications-with-gradio/\n\n阅读并操作：gradio quick start、streamlit quick start\n\n\n\n\n\n使用gradio（或streamlit）、langchain编写一个基于web界面的简单LLM应用，功能自选，比如对话、翻译、生成提纲等。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "简单LLM应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/appdev.html#学习目标",
    "href": "AIengineerBook/appdev.html#学习目标",
    "title": "简单LLM应用开发",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n使用gradio或streamlit，编写 简单的LLM应用程序界面。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "简单LLM应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/appdev.html#学习活动",
    "href": "AIengineerBook/appdev.html#学习活动",
    "title": "简单LLM应用开发",
    "section": "",
    "text": "观看视频：吴恩达《使用Gradio构建生成式人工智能应用程序/Building Generative AI Applications with Gradio》\n\n视频时长：约1小时\n视频内容简介：使用Gradio构建生成式AI应用程序.可以学习到：\n\n使用几行代码创建一个用户友好的应用程序（适用于非编码人员），以输入文本，使用开源的大型语言模型进行摘要，并在应用程序中显示摘要。\n创建一个允许用户上传图像的应用程序，该应用程序使用图像到文本（图像字幕）来描述已上传的图像，并在应用程序中显示图像和字幕。\n创建一个使用扩散模型生成图像的应用程序，然后在应用程序中显示生成的图像。\n结合前两个课程中所学的知识：上传图像，为图像加上字幕，然后使用字幕生成一个新图像。\n创建一个与开源LLM聊天的界面，使用Falcon，这是开源LLM排行榜上排名最高的LLM之一。\n\n在本课程结束时，将获得实用的知识，以快速构建交互式应用程序和演示文稿，以验证自己的项目并更快地发布。\n视频来源：https://www.deeplearning.ai/short-courses/building-generative-ai-applications-with-gradio/\n\n阅读并操作：gradio quick start、streamlit quick start",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "简单LLM应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/appdev.html#实践",
    "href": "AIengineerBook/appdev.html#实践",
    "title": "简单LLM应用开发",
    "section": "",
    "text": "使用gradio（或streamlit）、langchain编写一个基于web界面的简单LLM应用，功能自选，比如对话、翻译、生成提纲等。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "简单LLM应用开发"
    ]
  },
  {
    "objectID": "AIengineerBook/aigc_practice.html",
    "href": "AIengineerBook/aigc_practice.html",
    "title": "生成代码、图像和音频",
    "section": "",
    "text": "吴恩达《Hugging Face的开源模型|Open Source Models with Hugging Face》中英字幕（英文可关）\nCode Gen: Check out these resources on code generation - gpt-engineer, Tabby, gpt-migrate to migrate your codebase from one framework to another or one language to another.\nAudio Gen: text to speech by openAI, resemble.ai, elevenlabs API\nImage Gen: Image generation by Open AI, creating images using Stable Diffusion API"
  },
  {
    "objectID": "AIengineerBook/aigc_practice.html#学习活动",
    "href": "AIengineerBook/aigc_practice.html#学习活动",
    "title": "生成代码、图像和音频",
    "section": "",
    "text": "吴恩达《Hugging Face的开源模型|Open Source Models with Hugging Face》中英字幕（英文可关）\nCode Gen: Check out these resources on code generation - gpt-engineer, Tabby, gpt-migrate to migrate your codebase from one framework to another or one language to another.\nAudio Gen: text to speech by openAI, resemble.ai, elevenlabs API\nImage Gen: Image generation by Open AI, creating images using Stable Diffusion API"
  },
  {
    "objectID": "AIengineerBook/prompt_basic.html",
    "href": "AIengineerBook/prompt_basic.html",
    "title": "prompt工程初步",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n解释 prompt的概念；\n编写 简单的prompt， 完成概括、推断、转换文本等任务；\n应用 编写有效prompt的关键原则，系统化设计好的prompt。\n\n\n\n\n\n观看视频：吴恩达最新《面向开发者的ChatGPT提示工程》|chatgpt-prompt-engineering-for-developers|中英字幕\n\n视频时长：约1小时；\n视频内容简介：介绍LLM的工作原理，提供最佳的提示工程实践，并展示LLM API可用于各种任务的应用程序，包括：\n\n概括（例如，为了简洁而概括用户评论）\n推断（例如，情感分类，主题提取）\n转换文本（例如，翻译，拼写和语法纠正）\n扩展（例如，自动编写电子邮件）\n\n此外，可学习编写有效提示的两个关键原则，如何系统化地设计良好的提示，并学习构建自定义聊天机器人。\n视频来源：https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/\n\n阅读文档：Prompt工程简介\n阅读文档：Prompt Engineering Guide: Introduction\n阅读文档：如何向chatGPT提问以获得高质量答案\n\n\n\n\n\n针对自己的一些日常文字或创意工作，设计对应的实用prompt，并在ollama上使用。\n\n\n\n\n\n一文讲清楚实用Prompt工程\n精选Prompt框架-上, 精选Prompt框架-下\n我是如何赢得GPT-4提示工程大赛冠军的\n总结优秀的prompt案例\n一文掌握大模型提示词技巧：从战略到战术\n人人都是AI大师 - Prompt工程\nPrompt Engineering by Shaw Talebi\nlearnprompting\nlil’log",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "prompt工程初步"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_basic.html#学习目标",
    "href": "AIengineerBook/prompt_basic.html#学习目标",
    "title": "prompt工程初步",
    "section": "",
    "text": "学习完本部分，使学习者能够：\n\n解释 prompt的概念；\n编写 简单的prompt， 完成概括、推断、转换文本等任务；\n应用 编写有效prompt的关键原则，系统化设计好的prompt。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "prompt工程初步"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_basic.html#学习活动",
    "href": "AIengineerBook/prompt_basic.html#学习活动",
    "title": "prompt工程初步",
    "section": "",
    "text": "观看视频：吴恩达最新《面向开发者的ChatGPT提示工程》|chatgpt-prompt-engineering-for-developers|中英字幕\n\n视频时长：约1小时；\n视频内容简介：介绍LLM的工作原理，提供最佳的提示工程实践，并展示LLM API可用于各种任务的应用程序，包括：\n\n概括（例如，为了简洁而概括用户评论）\n推断（例如，情感分类，主题提取）\n转换文本（例如，翻译，拼写和语法纠正）\n扩展（例如，自动编写电子邮件）\n\n此外，可学习编写有效提示的两个关键原则，如何系统化地设计良好的提示，并学习构建自定义聊天机器人。\n视频来源：https://www.deeplearning.ai/short-courses/chatgpt-prompt-engineering-for-developers/\n\n阅读文档：Prompt工程简介\n阅读文档：Prompt Engineering Guide: Introduction\n阅读文档：如何向chatGPT提问以获得高质量答案",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "prompt工程初步"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_basic.html#实践",
    "href": "AIengineerBook/prompt_basic.html#实践",
    "title": "prompt工程初步",
    "section": "",
    "text": "针对自己的一些日常文字或创意工作，设计对应的实用prompt，并在ollama上使用。",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "prompt工程初步"
    ]
  },
  {
    "objectID": "AIengineerBook/prompt_basic.html#补充资料",
    "href": "AIengineerBook/prompt_basic.html#补充资料",
    "title": "prompt工程初步",
    "section": "",
    "text": "一文讲清楚实用Prompt工程\n精选Prompt框架-上, 精选Prompt框架-下\n我是如何赢得GPT-4提示工程大赛冠军的\n总结优秀的prompt案例\n一文掌握大模型提示词技巧：从战略到战术\n人人都是AI大师 - Prompt工程\nPrompt Engineering by Shaw Talebi\nlearnprompting\nlil’log",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "初学",
      "prompt工程初步"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "数智启思",
    "section": "",
    "text": "这是jdragon的个人网站.\n记录个人在计算机、人工智能、计算机教育、高等教育等方面的一些思考。\n\n\n\n Back to top"
  },
  {
    "objectID": "myblog/posts/post-with-code/index.html",
    "href": "myblog/posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\n\n\n Back to top"
  },
  {
    "objectID": "myblog/index.html",
    "href": "myblog/index.html",
    "title": "我的blog",
    "section": "",
    "text": "Title\n\n\nAuthor\n\n\nReading Time\n\n\nDate\n\n\n\n\n\n\n新手软件工程师须知\n\n\njdragon \n\n\n6 min\n\n\nSep 28, 2024\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "Blogs",
      "我的blog"
    ]
  },
  {
    "objectID": "AIengineerBook/index.html#应用信息",
    "href": "AIengineerBook/index.html#应用信息",
    "title": "前言",
    "section": "",
    "text": "@article{lj2024,\n  author = {龙军},\n  title = {LLM工程师速成指南},\n  year = {2024},\n  url = {https://jdragonnudt.github.io/inspiraHub/AIengineerBook/},\n}",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "前言"
    ]
  },
  {
    "objectID": "AIengineerBook/index.html#引用信息",
    "href": "AIengineerBook/index.html#引用信息",
    "title": "前言",
    "section": "",
    "text": "引用本教程请注明以下信息。\n@article{lj2024,\n  author = {龙军},\n  title = {LLM工程师速成指南},\n  year = {2024},\n  url = {https://jdragonnudt.github.io/inspiraHub/AIengineerBook/},\n}",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "前言"
    ]
  },
  {
    "objectID": "AIengineerBook/index.html#致谢",
    "href": "AIengineerBook/index.html#致谢",
    "title": "前言",
    "section": "",
    "text": "本教程参考了以下资料，并在此基础上补充若干内容成文，在此感谢相关作者。\n\n张长旺 (2024) 提供了一篇完整的路线图描述。\nTyagi (2024) 提供了github上的AI工程师学习路线路和资源列表",
    "crumbs": [
      "Tutorials",
      "LLM工程师速成指南",
      "前言"
    ]
  },
  {
    "objectID": "myblog/posts/new-to-software-engineer/index.html",
    "href": "myblog/posts/new-to-software-engineer/index.html",
    "title": "新手软件工程师须知",
    "section": "",
    "text": "本文所指新手软件工程师，指即将走上软件工程师岗位，还没有工作经验的应届毕业生（含本科和研究生）。\n作为一个新手软件工程师，大的角度，应该做好两个方面的准备。\n如果本科期间没有计算机科学与技术的基础，则还要抓紧弥补相关的知识短板。\n笔者水平有限，如有疏漏之处，还请指出。"
  },
  {
    "objectID": "myblog/posts/new-to-software-engineer/index.html#一计算机科学技术基础",
    "href": "myblog/posts/new-to-software-engineer/index.html#一计算机科学技术基础",
    "title": "新手软件工程师须知",
    "section": "一、计算机科学技术基础",
    "text": "一、计算机科学技术基础\n本部分旨在构建对计算机科学的基础认识，包括对计算机的基本理解、知识体系的构成以及编程与操作技能的掌握。此外，还强调了综合能力的重要性，如数学、英语以及阅读、沟通和团队协作技巧的提升，为学习者打下坚实的基础。\n\n(一)基本认识和知识体系\n此节从计算机的基本概念出发，逐步深入到计算机的知识体系结构，帮助读者建立起对计算机科学的全面认知框架。\n\n1.对计算机的基本认识\n在探讨如何成为一名优秀的软件工程师之前，首先必须对计算机有一个基本的认识。这不仅包括了解计算机的定义和历史发展，还需要理解其在现代社会中的作用。这种基础认识将帮助新手软件工程师建立对计算机本质的深刻理解，为后续的学习和发展奠定坚实的基础。\n\n核心要点\n\n定义：计算机是一种能够接收、处理信息并输出结果的电子设备。它遵循一系列指令（程序）来执行各种任务。\n历史发展：从早期的机械计算设备如算盘，到19世纪的差分机和分析机，再到20世纪的电子计算机，计算机的发展经历了巨大的变革。\n作用：在现代社会中，计算机广泛应用于科学研究、教育、商业、医疗、娱乐等多个领域，极大地提高了工作效率和生活质量。\n\n\n\nChecklist\n\n是否准确理解了计算机的定义？\n是否掌握了计算机的历史发展脉络？\n是否能够举例说明计算机在现代社会中的多种作用？\n\n\n\n参考资料介绍\n\nCrash Course 计算机科学速成课\n大学计算机基础\n《计算机简史》（Martin Campbell-Kelly & William Aspray著）\n\n\n\n总结\n通过对计算机的基本认识的学习，我们不仅了解了计算机的定义和历史发展，还认识到其在现代社会中的重要作用。这些基础知识对于新手软件工程师来说至关重要，它们将帮助我们更好地理解计算机的本质，为未来的学习和实践打下坚实的基础。\n\n\n\n2.计算机的知识体系\n计算机的知识体系是构建现代信息技术世界的基石，它涵盖了从硬件到软件，从理论到实践的广泛领域。对于新手软件工程师而言，深入理解这一知识体系不仅有助于打下坚实的基础，还能在未来的职业生涯中持续提升个人的技术能力和创新能力。\n\n核心要点\n\n计算机组成原理：了解计算机的基本结构和工作原理，包括中央处理器（CPU）、内存、输入输出设备等，以及它们如何协同工作。\n数据结构与算法：掌握常用的数据结构（如数组、链表、栈、队列、树、图）和基本算法（如排序、搜索），以及它们在解决实际问题中的应用。\n操作系统：理解操作系统的核心概念，包括进程管理、内存管理、文件系统、输入输出系统等，以及它们如何提供计算机资源的有效管理和调度。\n软件工程：学习软件开发的生命周期，包括需求分析、设计、编码、测试和维护，以及敏捷开发、版本控制等现代软件开发实践。\n编译原理：了解编译器的工作原理，包括词法分析、语法分析、语义分析、中间代码生成、代码优化和目标代码生成等阶段。\n计算机网络：掌握网络基础知识，如OSI模型、TCP/IP协议栈、路由和交换技术，以及网络安全和网络编程。\n信息安全：理解信息安全的基本原则和技术，包括加密、认证、访问控制、入侵检测和响应等。\n人工智能：探索AI的基础理论和应用，包括机器学习、深度学习、自然语言处理和计算机视觉等。\n\n\n\nChecklist\n\n熟悉计算机硬件的基本组成和工作原理。\n掌握至少一种编程语言及其数据结构和算法。\n理解操作系统的关键概念和功能。\n学习软件工程的最佳实践和工具。\n了解编译器设计的基本原理。\n掌握计算机网络的核心知识和技能。\n学习信息安全的基本策略和技术。\n探索人工智能的基础理论和应用。\n\n\n\n参考资料介绍\n\n《深入理解计算机系统》(Randal E. Bryant著)\n《计算机组成与设计：硬件/软件接口》（David A. Patterson 和 John L. Hennessy 著）\n《算法导论》（Thomas H. Cormen 等著）\n《现代操作系统》（Andrew S. Tanenbaum 和 Herbert Bos 著）\n《软件工程：实践者的研究方法》（Roger S. Pressman 著）\n《编译原理》（Alfred V. Aho, Monica S. Lam, Ravi Sethi, 和 Jeffrey D. Ullman 著）\n《计算机网络：自顶向下方法》（James F. Kurose 和 Keith W. Ross 著）\n《计算机安全：原理与实践》（William Stallings 等著）\n《深度学习》（Ian Goodfellow, Yoshua Bengio, 和 Aaron Courville 著）\n\n\n\n总结\n计算机的知识体系是一个广泛而深入的领域，它要求新手软件工程师不仅要掌握理论知识，还要通过实践不断提升自己的技能。通过系统地学习和实践，新手软件工程师可以逐步建立起自己的知识框架，为未来的职业发展奠定坚实的基础。\n\n\n\n\n(二)编程与操作技能\n本节重点介绍编程技能与操作技能的培养，旨在通过实践提高解决实际问题的能力。\n\n1.编程技能\n编程技能是软件工程的核心，它不仅包括对编程语言的掌握，还涉及到算法设计、数据结构、软件开发生命周期的理解以及问题解决能力。一个优秀的软件工程师应能够熟练运用编程技能来解决实际问题，优化系统性能，并持续跟进技术的发展。\n\n核心要点：\n\n编程语言的选择：了解不同编程语言的特点和适用场景，如Python适合数据分析和快速原型开发，Java常用于企业级应用开发，C++适用于系统/应用软件开发等。\n学习路径：建议从基础语言（如Python或Java）开始，逐步过渡到更复杂的语言（如C++或Go）。同时，重视数据结构和算法的学习，它们是编写高效代码的基础。\n编程思维的培养：通过练习编程题和参与项目实践来培养逻辑思维、抽象能力和问题分解能力。\n程序设计的基本功能：掌握函数、类、对象、继承、多态等面向对象编程的概念和应用。\n算法效率：学习常见的算法和数据结构，如排序、搜索、栈、队列、链表、树、图等，并理解它们的时间复杂度和空间复杂度。\n软件工程原则：熟悉SOLID原则、DRY原则等，这些原则有助于编写可维护和可扩展的代码。\n版本控制与持续集成：掌握Git等版本控制工具的使用，了解持续集成/持续部署（CI/CD）的流程和工具。\n测试驱动开发（TDD）：编写单元测试来验证代码的正确性，确保代码质量。\n\n\n\nChecklist：\n\n选择合适的编程语言进行深入学习。\n完成至少一个小型项目的完整开发周期，包括需求分析、设计、编码、测试和维护。\n阅读并理解经典的计算机科学书籍，如《算法导论》、《数据结构与算法分析》。\n参与开源项目或编程竞赛，提升实战能力。\n定期复习和总结所学知识，形成个人的知识体系。\n\n\n\n参考资料介绍：\n\n《C Primer Plus》（第6版）\n《Essential C++》\n《Python编程：从入门到实践》：适合初学者的Python教程。\n《Java核心技术 卷I》：深入讲解Java基础知识。\n《算法导论》：详细介绍算法设计和分析的经典教材。\n\n\n\n总结：\n编程技能是软件工程师不可或缺的基础能力，它要求我们不仅要熟练掌握一种或多种编程语言，还要具备扎实的算法基础、良好的编程习惯和持续学习的能力。通过不断实践和挑战自我，我们可以逐步成长为一名优秀的软件工程师。\n\n\n\n2.操作技能\n在成为一名合格的软件工程师的过程中，掌握操作系统使用、软件安装配置等基本操作技能是基础。这些技能不仅能够帮助新手快速适应工作环境，还能提高其工作效率和解决问题的能力。此外，了解如何高效利用计算机资源也是提升个人竞争力的关键因素之一。\n\n核心要点\n\n操作系统使用：熟悉至少一种主流操作系统（如Windows、Linux或macOS），包括文件系统管理、权限控制、进程监控等。\n软件安装与配置：能够独立完成常用软件的下载、安装、更新及配置，理解软件依赖关系及其解决方法。\n命令行工具：掌握基本的命令行操作，包括但不限于shell脚本编写、管道命令的使用、文本搜索过滤等。\n版本控制工具：熟练使用Git进行版本控制，包括分支管理、合并冲突解决、代码回滚等操作。\n容器化技术：了解Docker等容器化技术的基本概念和应用，能够在开发环境中使用容器部署和管理应用。\n资源管理：学会监测和管理计算机资源，如CPU、内存使用情况，以及磁盘空间的有效分配。\n自动化脚本：编写简单的自动化脚本来简化日常重复性工作，提高效率。\n\n\n\nChecklist\n\n掌握至少一种操作系统的高级使用技巧。\n能够独立完成软件的安装、配置和故障排除。\n熟练使用命令行界面执行各种任务。\n掌握Git版本控制工具的使用。\n了解并实践基本的容器化技术。\n能够监控和管理计算机资源。\n编写自动化脚本以提高工作效率。\n\n\n\n参考资料介绍\n\n《鸟哥的Linux私房菜》：深入讲解Linux操作系统的使用和管理。\n《UNIX环境高级编程》：详细介绍了Unix环境下的编程接口和习惯用法。\nPro Git书籍：全面覆盖Git版本控制系统的使用。\nDocker官方文档：学习Docker及相关容器化技术的权威指南。\nTop/htop, df/du等命令的手册页：学习如何监控系统资源使用情况。\n\n\n\n总结\n对于新手软件工程师而言，操作技能是其职业生涯的起点。通过系统地学习和实践上述核心要点，不仅可以快速融入团队，还能为后续的技术深造打下坚实的基础。务必重视这些看似基础却极其重要的技能，它们是通向成功的重要阶梯。\n\n\n\n\n(三)综合能力提升\n强调除了专业技能外，数学逻辑、英语能力以及良好的阅读、沟通和团队协作技巧对于计算机科学领域同样重要。\n\n1.数学与英语\n数学和英语在计算机科学中扮演着至关重要的角色。数学提供了处理复杂问题和逻辑推理的基础，而英语则是全球计算机科学领域的主要交流语言。掌握这两门学科对于成为一名优秀的软件工程师至关重要。\n\n核心要点\n\n数学\n\n离散数学：图论、集合论、逻辑和证明等是计算机科学的基础。例如，使用Dijkstra算法解决最短路径问题时，需要理解图论的基本概念。\n\\[ \\text{Dijkstra}(G, \\text{start}) = \\{ \\text{distance}[v] = \\infty \\ | \\ v \\in V \\} \\]\n线性代数：矩阵运算在图像处理、机器学习等领域广泛应用。例如，主成分分析（PCA）降维技术基于特征值分解。\n\\[ \\text{PCA}(X) = U \\Sigma V^T \\]\n概率论与统计：用于数据分析、机器学习模型评估等。例如，贝叶斯定理在垃圾邮件过滤中的应用。\n\\[ P(A|B) = \\frac{P(B|A)P(A)}{P(B)} \\]\n微积分：优化算法如梯度下降法依赖于多变量微积分。\n\\[\nabla f(\\theta) = \\frac{\\partial}{\\partial \\theta_i} f(\\theta) \\]\n\n\n\n英语\n\n技术文档阅读：大多数开源项目和技术规范都是用英语编写的。能够阅读和理解这些文档对于学习和实践至关重要。\n国际交流：加入全球开发者社区需要良好的英语沟通能力。\n编程语言：虽然许多编程语言支持多种自然语言，但英语仍是主流编程语言（如Python、Java）的主要语言。\n\n\n\n\nChecklist\n\n确保掌握基本的离散数学概念，如集合、关系、函数、图论等。\n熟悉线性代数的基本操作，包括矩阵乘法、逆矩阵计算等。\n理解概率论与统计学的基本原理，并能应用于实际问题。\n提高英语阅读能力，特别是技术文档的阅读理解能力。\n练习英语口语和写作，以便在国际环境中有效沟通。\n\n\n\n参考资料介绍\n为了深入学习数学和英语在计算机科学中的应用，可以参考以下资料：\n\n《离散数学及其应用》（Kenneth H. Rosen）\n《线性代数及其应用》（David C. Lay）\n《概率论与数理统计》\n\n\n\n总结\n数学和英语是计算机科学不可或缺的两部分。数学提供了解决问题的工具和方法，而英语则是获取知识和国际交流的桥梁。对于新手软件工程师而言，掌握这两门学科将大大提升其职业竞争力和发展潜力。通过不断学习和实践，可以逐步提高在这两个方面的能力，为未来的职业生涯打下坚实的基础。\n\n\n\n2.阅读、沟通及团队协作技巧\n在软件开发领域，技术能力虽然至关重要，但有效的沟通、协作以及持续的知识扩展同样不可或缺。软件工程师不仅需要编写高效代码，还必须能够清晰地表达想法、理解他人观点，并在团队中有效合作。此外，通过广泛阅读，软件工程师可以不断更新知识库，保持与行业发展同步。\n\n核心要点\n\n沟通技巧：包括口头和书面沟通能力，能够清晰、准确地传达信息，并有效地倾听他人意见。\n团队协作：理解团队合作的重要性，学习如何在团队环境中发挥作用，包括角色认知、责任分配和冲突解决。\n阅读习惯：培养定期阅读的习惯，关注行业新闻、技术博客、书籍和研究论文，以获取新知识。\n知识管理：学会整理和回顾所学知识，使用工具如笔记应用或知识库来系统地管理信息。\n\n\n\nChecklist\n\n确保所有团队成员都了解项目目标和个人职责。\n定期举行会议，讨论进展、问题和下一步计划。\n使用清晰的沟通渠道（如电子邮件、即时消息、项目管理工具）。\n鼓励团队成员提出问题和反馈。\n安排定期的代码审查和技术分享会。\n为团队成员提供学习和成长的机会，如参加研讨会、在线课程等。\n跟踪行业趋势和技术发展，适时调整项目方向。\n\n\n\n参考资料介绍\n\n《人月神话》：探讨软件工程项目中的团队协作和管理问题。\n《代码大全》：提供编码最佳实践和团队开发的指导原则。\n《软技能：代码之外的生存指南》：涵盖职业发展、生产力提升和个人品牌建设等方面。\n\n\n\n总结\n对于新手软件工程师而言，掌握阅读、沟通及团队协作的技巧是职业成长的关键。这些技能有助于提高工作效率，促进个人与团队之间的和谐合作，同时也是适应快速变化的技术环境的必要条件。通过不断学习和实践，软件工程师可以在职业生涯中取得更大的成功。"
  },
  {
    "objectID": "myblog/posts/new-to-software-engineer/index.html#二新手上道",
    "href": "myblog/posts/new-to-software-engineer/index.html#二新手上道",
    "title": "新手软件工程师须知",
    "section": "二、新手上道",
    "text": "二、新手上道\n本部分针对新手软件工程师，提供了一系列从入门到实践的指导，包括工程概念的理解、职业素养的培养、软件开发的实践以及编程语言与工具的熟练运用。\n\n(一)工程概念与职业素养\n介绍工程、产品、项目的基本概念，以及作为计算机科学专业人员应具备的职业素养和团队合作能力。\n\n1.建立工程、产品、项目的概念\n在软件开发的广阔领域中，清晰地理解“工程”、“产品”与“项目”这三个核心概念及其相互间的关系，对于新手软件工程师而言至关重要。新手软件工程师必须要特别明确，自己是在从事工程、产品和项目相关的工作，这和过去学生时代的小规模程序设计是完全不同的。\n\n核心要点\n\n工程（Engineering）： 工程是指应用科学原理和技术手段来设计、建造和维护结构物或系统的活动。在软件领域，工程强调的是系统性和可持续性，涉及从需求分析、设计、编码到维护的整个生命周期管理。它是实现软件产品功能、性能、安全性等非功能特性的关键途径。\n产品（Product）： 产品是满足市场需求或用户期望的有形或无形物品。软件产品特指那些经过精心设计、开发并投入市场以满足特定用户需求的软件实体，如应用程序、系统平台或服务。它关注的是用户体验、市场适应性及商业价值，是连接技术与市场的桥梁。\n项目（Project）： 项目是为了创造独特的产品、服务或成果而进行的临时性努力。软件开发项目则是围绕特定目标，在一定时间内，利用限定资源完成的一次性任务。它侧重于目标达成的效率和效果，通常具有明确的开始和结束时间，是实践工程方法和产品理念的具体载体。\n\n\n\nChecklist\n\n工程视角：是否考虑了软件的可维护性、可扩展性、安全性等长期因素？\n产品视角：软件是否解决了用户的痛点，提供了良好的用户体验，具备市场竞争力？\n项目视角：是否有清晰的项目范围、时间表、预算和风险管理计划？团队成员是否明确各自的角色和责任？\n\n\n\n参考资料介绍\n\n《软件开发的科学与艺术》by 陈宏刚、林斌等\n《工程思维》by Mark N. Horenstein\n《软件工程最佳实践》by Capers Jones\n《营销管理》by Philip Kotler and Kevin Lane Keller：阅读其中和需求、产品相关的部分。\n\n\n\n总结\n综上所述，“工程”、“产品”与“项目”三者虽各有侧重，但在软件开发实践中紧密相连，相辅相成。新手软件工程师需深刻理解它们的内涵与外延，学会在不同的情境下灵活切换视角，以全面、系统的方式推进软件的开发与迭代。通过不断实践与反思，逐步建立起一套适合自己的方法论体系，为成为一名卓越的软件工程师奠定坚实的基础。\n\n\n\n2.基本职业素养的养成\n在软件开发领域，职业素养不仅关乎个人职业生涯的发展，还直接影响到团队协作、项目质量和企业声誉。对于新手软件工程师而言，培养良好的职业素养是其成长过程中不可或缺的一部分。本章节将探讨软件工程师应具备的基本职业道德、责任感以及终身学习的重要性。\n\n核心要点\n\n职业道德：软件工程师应当遵守诚实守信的原则，保护用户隐私和数据安全，尊重他人的知识产权，避免任何形式的抄袭或不当竞争行为。\n责任感：对自己的代码负责，确保其正确性、可读性和可维护性。同时，对项目的成功负有责任，积极参与团队合作，及时沟通问题并提出解决方案。\n终身学习：技术领域日新月异，软件工程师需要不断更新知识和技能，适应新技术的变化。通过阅读专业书籍、参加在线课程和技术交流会等方式，保持学习的主动性和持续性。\n沟通能力：有效的沟通能够减少误解和冲突，提高团队效率。软件工程师应学会清晰地表达自己的想法，同时也要善于倾听他人的意见。\n批判性思维：面对问题时，能够独立思考，分析问题的多个方面，提出合理的解决方案。\n适应性和灵活性：在快速变化的市场环境中，能够迅速适应新工具、新流程和新需求。\n时间管理：合理安排工作和学习时间，确保按时完成任务并有足够的时间进行自我提升。\n团队合作：理解团队目标，与团队成员建立良好的合作关系，共同解决问题。\n专业态度：在工作中展现出专业性，包括着装、言谈举止以及对工作的认真态度。\n创新精神：鼓励创新思维，不断寻找改进现有产品和方法的机会。\n\n\n\nChecklist\n\n定期回顾和更新自己的职业道德标准。\n设立个人发展计划，明确短期和长期学习目标。\n参与团队建设活动，增强团队凝聚力。\n练习公开演讲和写作技巧，提高表达能力。\n制定时间管理策略，优化工作流程。\n主动寻求反馈，持续改进工作表现。\n\n\n\n参考资料介绍\n\n《代码整洁之道：程序员的职业素养》by Robert C. Martin\n《匠艺整洁之道：程序员的职业修养》by Robert C. Martin\n《软技能：代码之外的生存指南》（Soft Skills: The Software Developer’s Life Manual） by John Sonmez\n\n\n\n总结\n基本职业素养的培养是一个持续的过程，它要求软件工程师不断地自我反省、学习和成长。通过遵循上述核心要点，并利用checklist来监督自己的进步，新手软件工程师可以逐步构建起坚实的职业基础，为未来的职业生涯打下坚实的基石。记住，优秀的职业素养不仅是个人成功的保证，也是推动整个行业向前发展的关键因素。\n\n\n\n3.团队合作与文档编写\n在软件工程师的职业生涯中，团队合作和文档编写是两个不可忽视的重要方面。高效的团队合作能够显著提升项目的完成速度和质量，而清晰、准确的文档则是项目成功的关键保障。良好的文档不仅能够帮助团队成员理解项目需求和设计思路，还能为未来的维护和扩展提供有力支持。\n\n核心要点\n\n团队合作的重要性：\n\n沟通与协调：有效的沟通是团队合作的基础。通过定期会议、即时通讯工具以及面对面的交流，确保信息传达的准确性和及时性。\n角色分工：明确团队中每个成员的角色和职责，避免重复劳动和责任不清的情况。\n信任与尊重：建立团队成员之间的信任和尊重，鼓励开放的讨论和反馈，促进创新和问题解决。\n\n主要文档类别：\n\n需求文档：详细记录项目需求，包括功能需求和非功能需求。使用用户故事（User Stories）和用例图（Use Case Diagrams）等方法来描述需求。\n设计文档：包括系统架构图、类图、序列图等，帮助理解系统的设计和实现细节。\n测试文档：包含测试计划、测试用例和测试报告，确保软件质量。\n用户手册和技术文档：为用户提供详细的操作指南，为开发者提供技术参考，确保软件的使用和维护。\n\n版本控制与文档管理：\n\n版本控制系统：使用Git等版本控制系统来管理文档的版本，确保文档的历史记录和协作开发。\ngit init\ngit add .\ngit commit -m \"Initial commit\"\ngit push origin main\n文档管理系统：采用Confluence、Markdown等工具来组织和管理文档，提高文档的可访问性和可维护性。\n\n\n\n\nChecklist\n\n定期召开团队会议，确保信息同步。\n明确团队成员的角色和职责。\n使用用户故事和用例图记录需求。\n绘制系统架构图和类图。\n编写详细的测试计划和测试用例。\n准备用户手册和技术文档。\n使用版本控制系统管理文档版本。\n采用文档管理系统组织文档。\n\n\n\n参考资料\n\n《软件工程：实践者的研究方法》（Roger S. Pressman 著）\n\n\n\n总结\n团队合作和文档编写是软件工程师不可或缺的技能。通过有效的沟通和明确的角色分工，可以提升团队的协作效率。清晰、准确的文档不仅有助于项目的顺利进行，还能为未来的维护和扩展提供重要支持。掌握这些技巧和方法，将使新手软件工程师在职业生涯中更加游刃有余。\n\n\n\n4.口头表达技巧\n在软件工程师的职业生涯中，有效的口头表达和演讲技巧是不可或缺的。这些技能不仅有助于清晰传达技术概念、项目进展和创新想法，还能增强个人影响力和说服力，促进团队合作与决策过程。掌握口头表达技巧对于提升个人职业形象、建立信任关系以及推动职业发展具有重要意义。\n\n核心要点\n\n清晰的结构：使用“问题—解决方案—益处”的结构来组织演讲内容，确保听众能够迅速抓住重点。\n逻辑性：确保论述的逻辑连贯，避免跳跃式思维，使听众能够顺畅地跟随你的思路。\n简洁明了：避免冗长和复杂的表述，用简单直接的语言传达信息。\n非语言沟通：注意肢体语言、面部表情和眼神交流，以增强说服力。\n适应听众：根据听众的背景和兴趣调整演讲内容和风格。\n练习与反馈：通过模拟演讲和收集反馈来不断改进口头表达技巧。\n\n\n\nchecklist\n\n准备充分：对演讲内容进行深入研究，确保信息准确无误。\n明确目标：确定演讲的目的，是为了教育、说服还是娱乐。\n时间管理：控制演讲长度，避免拖延或过于简短。\n互动环节：设计问答环节，鼓励听众参与。\n应对紧张：学习放松技巧，如深呼吸，以减轻演讲前的紧张感。\n\n\n\n参考资料介绍\n\n暂缺\n\n\n\n总结\n口头表达技巧是软件工程师软技能的重要组成部分，它能够帮助工程师更有效地沟通思想、影响他人并推动项目向前发展。通过不断练习和学习，每位软件工程师都可以提高自己的口头表达能力，从而在职场上取得更大的成功。\n\n\n\n\n(二)软件工程与开发实践\n深入探讨敏捷开发、SOLID原则、设计模式等软件开发的核心概念，以及如何实施软件质量保证措施和版本控制。\n\n1.敏捷开发\n敏捷开发是一种以人为本、迭代和增量的软件开发方法。它强调在开发过程中能够快速响应变化，持续交付有价值的软件，并在整个项目生命周期中保持高质量的代码和设计。本章节旨在为新手软件工程师介绍敏捷开发的基本原则和实践，以便更好地理解和应用于项目中。\n敏捷开发的核心在于适应性和灵活性，它允许团队在面对需求变更时能够迅速调整计划，而不是僵化地遵循预先设定的计划。这种方法特别适合于需求不明确或可能发生变化的项目。通过短周期的迭代，敏捷开发确保了项目能够及时获得反馈，从而不断改进产品功能和用户体验。\n\n核心要点\n\n个体与交互：重视团队成员之间的直接沟通，认为面对面的交流比过程和工具更重要。\n可工作的软件：优先于详尽的文档，强调定期交付可运行的软件版本。\n客户合作：与客户紧密合作，确保软件满足客户需求。\n响应变化：欢迎需求的变化，即使是在开发的后期阶段。\n持续迭代：通过短周期的迭代来逐步完善软件。\n团队自我组织：鼓励团队自主管理其工作方式。\n\n\n\nChecklist\n\n确保所有团队成员理解敏捷原则。\n定期举行站立会议以同步进度和解决问题。\n使用敏捷工具（如Jira）来跟踪任务和迭代。\n每个迭代结束时进行回顾会议，总结经验教训。\n保持代码质量和设计的持续重构。\n确保客户参与每个迭代的演示和评审。\n\n\n\n参考资料介绍\n\n《敏捷软件开发：原则、模式与实践》：介绍敏捷开发的方法学。\n\n\n\n总结\n敏捷开发不仅仅是一种软件开发方法，它是一种文化和思维方式，要求团队成员具备高度的自我管理能力和对变化的敏感性。通过实施敏捷原则和实践，新手软件工程师可以更快地适应项目需求的变化，提高开发效率，最终交付高质量的软件产品。\n\n\n\n2.SOLID编码原则\n解析SOLID原则，指导新手编写高质量、可维护的代码。\n\n核心要点\nSOLID原则是面向对象编程和设计中的一系列指导原则，旨在提高软件的可维护性和可扩展性。SOLID是以下五个原则的首字母缩写：\n\n单一职责原则（Single Responsibility Principle, SRP） : 每个类应该只有一个引起变化的原因，即一个类应该只负责一项职责。这有助于减少类之间的耦合，使得每个类的变化不会影响到其他类。例如，一个UserService类应该只处理与用户相关的逻辑，而不涉及其他业务逻辑。\n开闭原则（Open/Closed Principle, OCP） : 软件实体（类、模块、函数等）应该对扩展开放，对修改封闭。这意味着在添加新功能时，应尽量通过继承或组合现有类来实现，而不是修改现有类的代码。这样可以避免引入错误和增加维护难度。\n里氏替换原则（Liskov Substitution Principle, LSP） : 子类型必须能够替换掉它们的父类型，这是面向对象设计的基本原则之一。这意味着在任何使用父类的地方，都可以用其子类来代替而不会影响程序的正确性。\n接口隔离原则（Interface Segregation Principle, ISP） : 不应该强迫客户依赖于它们不用的接口，即接口应该尽量细化，使其更加具体和专用。这有助于减少系统的复杂性和提高灵活性。\n依赖倒置原则（Dependency Inversion Principle, DIP） : 高层模块不应该依赖于低层模块，两者都应该依赖于抽象。抽象不应该依赖于细节，细节应该依赖于抽象。这有助于降低模块间的耦合度，提高系统的灵活性和可维护性。\n\n\n\nChecklist\n\n是否每个类都只有一个职责？\n是否可以通过添加新的代码来扩展系统，而不是修改现有的代码？\n是否可以用子类替换其父类而不影响程序的正确性？\n是否使用了多个小的、具体的接口，而不是一个大的总接口？\n是否尽可能地依赖于抽象，而不是具体的实现？\n\n\n\n参考资料介绍\n\n《重构：改善既有代码的设计》是一本关于如何通过重构来改善代码质量的书籍，其中也涉及到了SOLID原则的应用。\n\n\n\n总结\nSOLID原则是一种重要的面向对象设计和编程的理念，它可以帮助开发者创建出更加灵活、可维护的软件系统。通过遵循这些原则，我们可以有效地减少代码间的耦合，提高系统的可扩展性和复用性。\n\n\n\n设计模式\n设计模式是解决特定问题的成熟解决方案，它们是经过验证的最佳实践。常见的设计模式包括创建型模式、结构型模式和行为型模式。\n设计模式在软件工程中扮演着至关重要的角色。它们是解决特定问题的最佳实践，是经过验证的解决方案，可以帮助开发者避免从头开始设计，从而节省时间和资源。设计模式提供了一种通用的语言，使得开发者可以更容易地交流和理解彼此的代码。此外，设计模式还可以提高代码的可复用性、可维护性和灵活性，使软件系统更加健壮和易于扩展。\n\n核心要点\n\n创建型模式（Creational Patterns : 创建型模式用于处理对象创建过程中的问题，使对象的创建和使用分离。常见的创建型模式包括单例模式、工厂方法模式、抽象工厂模式、建造者模式、原型模式。\n结构型模式（Structural Patterns : 结构型模式用于处理类或对象的组合问题，通过简化设计来增强系统的结构。常见的结构型模式包括适配器模式、桥接模式、组合模式、装饰器模式、外观模式、享元模式、代理模式。这些模式帮助设计灵活且可维护的系统结构。\n行为型模式（Behavioral Patterns : 行为型模式用于处理类或对象之间的交互问题，通过定义对象之间的通信方式来增强系统的灵活性和可扩展性。常见的行为型模式包括策略模式、模板方法模式、观察者模式、迭代器模式、责任链模式、命令模式、解释器模式、状态模式、备忘录模式、访问者模式、中介者模式、代理模式。这些模式帮助设计灵活且可维护的系统行为。\n\n\n\nChecklist\n在应用设计模式时，需要注意以下几点：\n\n理解问题：首先，需要深入理解要解决的问题，以便选择合适的设计模式。\n不要过度使用：设计模式是一种工具，而不是目标。不应该为了使用设计模式而使用设计模式。\n保持简单：尽可能选择最简单的解决方案。复杂的设计模式可能会引入不必要的复杂性。\n考虑性能：虽然设计模式可以提高代码的可复用性和可维护性，但也可能影响性能。因此，在选择设计模式时，需要考虑其对性能的影响。\n持续学习：设计模式是一个不断发展的领域，新的模式不断出现。因此，需要持续学习和更新知识。\n\n\n\n参考资料介绍\n\n《设计模式：可复用面向对象软件的基础》是一本详细介绍设计模式的经典书籍，其中包括了23种经典设计模式的详细解释和应用实例。\n\n\n\n总结\n设计模式是软件工程中的重要工具，它们提供了一种通用的语言，帮助开发者解决常见的软件设计问题。通过理解和应用这些模式，开发者可以提高代码的可复用性、可维护性和灵活性，使软件系统更加健壮和易于扩展。然而，需要注意的是，设计模式只是一种工具，而不是目标。在使用设计模式时，需要深入理解问题，选择合适的模式，并考虑其对性能的影响。\n\n\n\n3.软件质量\n软件质量是衡量一个软件产品在满足用户需求、提供稳定服务以及维护成本控制等方面表现的标准。高质量的软件不仅能够提高用户满意度，还能显著降低后期的维护和升级成本。对于新手软件工程师而言，理解并掌握如何评估和提升软件质量至关重要。\n\n核心要点\n\n功能性（Functionality）：确保软件实现所有预期功能，并符合用户需求。\n可靠性（Reliability）：软件应能持续稳定运行，不出现故障或错误。\n可用性（Usability）：软件应易于理解和使用，用户界面友好。\n效率（Efficiency）：软件应有效利用资源，如内存、处理器时间等。\n可维护性（Maintainability）：软件应易于修改、更新和扩展。\n可移植性（Portability）：软件应能在不同的硬件或操作系统平台上运行。\n\n\n\nChecklist\n\n是否所有功能都经过彻底测试？\n软件是否有自动错误报告机制？\n用户界面是否符合直观易用的设计原则？\n性能指标是否达到预定标准？\n代码是否遵循了良好的编程实践，便于未来维护？\n软件是否能够在目标平台上无缝运行？\n\n\n\n参考资料介绍\n\n《代码大全》by Steve McConnell\n《代码质量》 by Diomides Spinellis\n\n\n\n总结\n软件质量是软件开发过程中不可或缺的一部分，它直接影响到产品的成功与否。作为新手软件工程师，必须了解并掌握如何评估和提升软件质量的方法。通过关注功能性、可靠性、可用性、效率、可维护性和可移植性这六个核心要点，并运用相应的检查清单来确保每个方面都得到妥善处理，可以显著提高软件的整体质量。此外，不断参考最新的研究资料和行业最佳实践也是提升个人技能的重要途径。\n\n\n\n4.软件质量保障措施\n在软件开发过程中，确保高质量的代码和功能是至关重要的。这不仅有助于减少后期维护成本，还能提升用户体验和满意度。软件质量保障措施包括软件测试、代码审查等，旨在通过系统化的方法识别和修复潜在的缺陷，从而提高软件的可靠性和稳定性。\n\n核心要点\n\n1. 软件测试\n软件测试是验证和确认软件是否满足其设计要求的过程。测试可以分为不同层次，包括单元测试、集成测试、系统测试和验收测试。每个层次的测试都有其特定的目标和方法。\n\n单元测试：针对软件的最小可测试单元（如函数或方法）进行测试。通常使用测试框架（如JUnit、pytest）来编写和执行测试用例。\n集成测试：验证各个模块之间的接口是否正确交互。这通常在单元测试之后进行，以确保模块集成后的功能正确性。\n系统测试：对整个系统进行全面测试，以验证其符合所有规定的需求。这包括功能测试、性能测试、安全性测试等。\n验收测试：也称为用户验收测试（UAT），由最终用户进行，以验证软件是否符合业务需求和用户期望。\n\n\n\n2. 代码审查\n代码审查是一种通过人工检查代码来发现潜在错误和改进代码质量的方法。常见的代码审查方法包括：\n\n同行审查：由同事或团队成员对代码进行检查，可以发现错误、改进代码风格和结构。\n正式审查：采用结构化的方法，如Fagan检查，通过预先定义的步骤和角色进行代码审查。\n\n\n\n3. 持续集成与持续部署\n持续集成（CI）和持续部署（CD）是现代软件开发中的重要实践。通过自动化构建、测试和部署流程，可以快速发现和修复问题，提高开发效率。\n\n持续集成：开发人员频繁地将代码集成到主分支，每次集成都自动运行一系列测试，确保新代码不会破坏现有功能。\n持续部署：在持续集成的基础上，自动化将通过测试的代码部署到生产环境，缩短发布周期，提高软件交付速度。\n\n\n\n\nChecklist\n为了确保软件质量保障措施的有效实施，可以使用以下checklist：\n\n测试覆盖率：确保所有关键功能和边界情况都被测试覆盖。\n代码规范：遵循统一的编码标准和风格指南，提高代码的可读性和可维护性。\n审查反馈：记录并跟踪代码审查中发现的问题和建议，及时进行修复和改进。\n自动化工具：使用自动化测试工具和持续集成平台，提高测试效率和准确性。\n\n\n\n参考资料\n\n《代码大全》by Steve McConnell\n\n\n\n总结\n软件质量保障措施是确保软件高质量和高可靠性的关键步骤。通过系统的软件测试、严格的代码审查以及持续集成与持续部署的实践，可以有效地识别和修复潜在问题，提升软件的整体质量。对于新手软件工程师而言，掌握这些方法和最佳实践，将有助于他们在职业生涯中不断提升自己的技能和专业素养。\n\n\n\n5.版本控制与持续集成实践\n在软件开发过程中，版本控制系统（Version Control System, VCS）和持续集成/持续部署（Continuous Integration/Continuous Deployment, CI/CD）是确保代码质量、提高开发效率和维护团队协作的关键工具。版本控制系统允许开发者跟踪和管理代码变更，而CI/CD流程则自动化了代码的构建、测试和部署过程。这些实践不仅有助于减少人为错误，还能加快软件交付速度，提升产品质量。\n\n核心要点\n\n版本控制: 使用如Git这样的分布式版本控制系统来管理项目的历史记录和变更。掌握基本命令如commit, push, pull, branch, merge等，以及如何利用分支策略（如Git Flow）来组织开发流程。\n持续集成 (CI): 通过自动化构建和测试代码来尽早发现集成错误。常用的CI工具包括Jenkins, Travis CI, CircleCI等。配置CI服务器监听代码仓库的变更，并在每次提交后自动运行构建和测试脚本。\n持续部署 (CD): 扩展自CI，自动化将应用部署到生产环境的过程。这要求更高级的自动化测试和发布管理策略，以确保只有通过所有测试的代码才能被部署。\n基础设施即代码 (IaC): 使用代码来管理基础设施的配置，如使用Terraform或Ansible。这使得基础设施的变更可以像应用代码一样进行版本控制和自动化部署。\n监控与反馈: 设置监控工具来跟踪应用的性能和健康状况，确保快速响应任何问题。同时，收集用户反馈以持续改进产品。\n\n\n\nChecklist\n\n确保团队成员都受过VCS的基本培训。\n为项目选择合适的CI/CD工具，并配置必要的构建和测试脚本。\n定义清晰的代码提交规范和分支管理策略。\n实施IaC来管理基础设施和应用配置。\n建立有效的监控和反馈机制。\n\n\n\n参考资料介绍\n\n“Pro Git” by Scott Chacon and Ben Straub - 深入了解Git的高级用法和工作流程。\nJenkins官方文档 - 学习如何设置和使用Jenkins进行持续集成。\n\n\n\n总结\n版本控制和CI/CD实践对于现代软件开发至关重要。它们不仅提高了开发效率，还增强了产品的可靠性和安全性。通过采纳这些实践，新手工程师可以更快地融入团队，同时也为职业生涯打下坚实的基础。随着技术的发展，持续学习和适应新的工具和方法将是每个软件工程师不变的课题。\n\n\n\n6.测试驱动开发（TDD）与行为驱动开发（BDD）介绍\n测试驱动开发（Test-Driven Development, TDD）和行为驱动开发（Behavior-Driven Development, BDD）是现代软件开发中两种重要的方法，旨在提高软件的质量和可维护性。这两种方法都强调在编写实际代码之前先编写测试用例，从而确保代码的正确性和稳定性。它们在敏捷开发环境中尤为流行，有助于快速响应变化和持续交付高质量的软件产品。\n\n核心要点\n\n测试驱动开发（TDD）\n\n循环过程：TDD遵循红-绿-重构的循环过程。首先编写失败的单元测试（红色），然后编写足够的代码让测试通过（绿色），最后对代码进行重构以提高其质量。\n单元测试：TDD主要关注于单元测试，即针对软件中的最小可测试部分编写测试。\n设计改进：通过先写测试的方式，开发者可以更好地思考接口设计和程序结构，从而设计出更加清晰和模块化的代码。\n工具支持：JUnit、NUnit、PHPUnit等单元测试框架为TDD提供了强有力的支持。\n\n\n\n行为驱动开发（BDD）\n\n业务导向：BDD更侧重于从业务角度出发，使用非技术语言描述软件的行为。\n共享词汇表：BDD鼓励开发团队与业务分析师共同创建“共享词汇表”，以确保所有人对需求有相同的理解。\n验收标准：BDD强调可执行的规格说明，即“活着”的文档，这些文档可以直接转化为自动化测试。\n工具支持：Cucumber、SpecFlow等工具支持BDD的实践，允许以自然语言编写测试用例。\n\n\n\n\nChecklist\n\n确保理解TDD和BDD的核心理念及其区别。\n选择合适的工具和框架来支持TDD或BDD实践。\n培养先写测试的习惯，将测试视为代码的一部分。\n定期回顾和重构代码，保持代码的健康状态。\n与团队成员和利益相关者保持良好的沟通，确保需求的准确传达和实现。\n\n\n\n参考资料介绍\n\n《测试驱动开发：实践与模式解析》by Kent Beck\n\n\n\n总结\nTDD和BDD都是推动高质量软件开发的有效方法。它们通过提前考虑测试来引导开发过程，帮助团队构建出更加健壮、可靠且易于维护的软件系统。虽然两者在某些方面有所不同，但它们都强调了测试的重要性，并将其作为设计和开发过程中的一个核心部分。对于新手软件工程师而言，掌握这些技能不仅可以提高个人的编码能力，还能更好地融入团队并与之协作，共同提升软件项目的整体质量。\n\n\n\n\n(三)编程语言与工具熟练度\n指导新手如何选择和学习主流编程语言，熟悉常用的开发工具和框架，并探索与AI合作开发的策略。\n\n1.主流编程语言学习路径\n在软件开发领域，掌握一门或多门主流编程语言是进入该行业的基础。不同的编程语言适用于不同的应用场景，因此，理解各语言的特点及其适用环境对于新手软件工程师至关重要。此外，了解如何高效地学习这些编程语言也是提高开发效率和项目成功率的关键。\n\n核心要点\n\nC/C++\n\n特点：C语言是许多现代编程语言的基础，具有高效性和灵活性；C++在C的基础上增加了面向对象的特性。广泛应用于系统编程、游戏开发、嵌入式系统等领域。\n资源：《C程序设计语言》，《C++ Primer》，以及在线平台如GeeksforGeeks, TutorialsPoint。\n学习路径：基础语法 → 数据类型与操作 → 控制结构 → 函数 → 文件操作 → 指针和内存管理（C）→ 面向对象编程（C++）。\n\n\n\nPython\n\n特点：易于学习，广泛应用于数据分析、人工智能、网络开发等领域。\n资源：《Python编程：从入门到实践》，《Python核心编程》等书籍；在线课程如Codecademy, Coursera。\n学习路径：基础语法 → 数据结构与算法 → Web框架（Django/Flask）→ 数据分析（Pandas, NumPy）→ 机器学习库（Scikit-learn）。\n\n\n\nJavaScript\n\n特点：Web前端开发必备，也可用于后端开发（Node.js）。\n资源：《JavaScript高级程序设计》，《你不知道的JavaScript》，MDN Web Docs。\n学习路径：基础语法 → DOM操作 → 前端框架（React, Angular, Vue）→ Node.js。\n\n\n\nJava\n\n特点：强类型语言，广泛用于企业级应用、Android开发。\n资源：《Java核心技术卷I》，《Effective Java》。\n学习路径：基础语法 → 面向对象编程 → Java标准库 → Spring框架。\n\n\n\nC\n\n特点：微软开发的语言，主要用于.NET平台。\n资源：《C# in Depth》，《Pro C#》。\n学习路径：基础语法 → .NET基础 → ASP.NET Core。\n\n\n\nGo\n\n特点：由Google开发，简洁高效，适合构建大型系统。\n资源：官方文档。\n学习路径：基础语法 → 并发编程 → 网络编程。\n\n\n\n\nChecklist\n\n确保理解每种语言的核心概念和应用场景。\n完成至少一个小项目来实践所学知识。\n加入社区讨论，解决实际问题。\n定期复习和更新知识库。\n\n\n\n参考资料介绍\n为了深入理解每门语言及其生态系统，推荐阅读官方文档、经典书籍以及参加线上课程和研讨会。同时，GitHub上的开源项目也是学习的好去处。\n\n\n总结\n选择正确的编程语言并制定合理的学习路径对于新手软件工程师来说至关重要。每种语言都有其独特的优势和应用场景，因此理解它们的特性并根据个人兴趣和职业目标进行选择是关键。通过结合理论学习和实践项目，可以有效地提升编程技能并为未来的职业生涯打下坚实的基础。\n\n\n\n2.工具与框架的选择和使用\n在软件开发过程中，选择合适的工具和框架对于提高开发效率、保证代码质量和满足项目需求至关重要。不同的工具和框架有其特定的优势和适用场景，因此理解它们的特点并能够根据具体需求做出明智选择是新手软件工程师必须掌握的重要技能之一。\n\n核心要点\n\n编程语言的生态系统: 每种编程语言都有其独特的生态系统，包括库、框架、IDE（集成开发环境）等。例如，Python以其丰富的库支持数据科学和机器学习，而JavaScript则广泛应用于前端开发。\n框架的角色: 框架提供了一套预定义的规则和结构，帮助开发者遵循最佳实践快速构建应用。例如，React用于构建用户界面，Django适用于快速开发安全的web应用。\n工具的重要性: 版本控制系统如Git，持续集成/持续部署(CI/CD)工具如Jenkins，以及自动化测试工具等，都是现代软件开发不可或缺的部分。\n性能考虑: 选择工具和框架时，需要考虑其对应用性能的影响。轻量级的框架可能更适合资源受限的环境。\n社区和支持: 一个活跃的开发社区可以提供大量的学习资源、插件和第三方库，同时也意味着更多的就业机会和支持渠道。\n\n\n\nChecklist\n\n项目规模: 小型项目可能不需要复杂的框架，而大型项目则需要良好的架构设计。\n团队熟悉度: 团队成员对工具和框架的熟悉程度会影响开发速度和维护成本。\n维护性和扩展性: 选择易于维护且可扩展的工具和框架以适应未来的需求变化。\n安全性: 确保所选工具和框架有良好的安全记录和及时的安全更新。\n许可证兼容性: 检查开源许可证是否与项目兼容，避免法律问题。\n\n\n\n参考资料介绍\n\n官方文档: 始终是学习任何工具或框架的第一手资料。\n在线教程和课程: Udemy, Coursera, Pluralsight提供的视频课程可以帮助快速上手。\nStack Overflow: 解决具体问题的好去处，可以找到许多实际问题的解答。\nGitHub: 查看项目的star数和fork数，了解项目的流行程度和活跃度。\n\n\n\n总结\n作为新手软件工程师，在选择工具和框架时，应该综合考虑项目需求、个人偏好、团队能力和长期维护等因素。通过不断实践和学习，逐渐建立起自己的判断力，以便在未来的项目中做出更加合理的决策。记住，没有一种工具或框架适合所有情况，关键是找到最适合当前项目的解决方案。\n\n\n\n3.使用AI工具\n在当今软件开发领域，人工智能（AI）技术的融入已成为推动行业发展的重要驱动力之一。对于新手软件工程师而言，掌握如何有效利用AI工具，不仅能够显著提升开发效率，还能促进创新思维的培养，使开发者能够站在更高的起点上参与复杂项目的开发与优化。本节将深入探讨AI工具在软件开发中的应用价值，以及如何将其作为强大的辅助手段，加速从理论到实践的转化过程。\n\n核心要点\n\n代码生成与补全：现代AI工具，如GitHub Copilot、TabNine等，能够基于上下文自动生成代码片段或提供智能补全建议，极大地提高了编码速度和准确性。这些工具通过深度学习模型训练，能理解自然语言注释和已有代码逻辑，从而辅助开发者快速完成编码任务。\n自动化测试与调试：AI驱动的测试工具，例如SmartBear的TestComplete或Appium，能够自动执行测试用例，识别潜在的错误和性能瓶颈。它们可以模拟复杂的用户交互场景，比传统手工测试更高效地发现缺陷。\n需求分析与设计辅助：通过自然语言处理技术，AI可以帮助解析需求文档，提取关键信息，甚至直接转化为初步的设计模型或伪代码。这有助于确保需求的准确理解和快速响应，减少沟通成本。\n性能优化建议：AI工具能分析代码库，识别出低效或冗余的代码段，提出优化方案。例如，DeepCode可以利用机器学习算法评估代码质量，并提供改进建议，帮助开发者提升应用性能。\n知识管理与搜索：随着项目规模的增长，维护庞大的代码库和文档变得日益困难。AI搜索引擎如Kite或KitchenSink，能够理解查询意图，快速定位相关信息，包括API文档、Stack Overflow答案等，极大提升了信息检索效率。\n\n\n\nChecklist\n\n确认所选AI工具与项目需求和技术栈的兼容性。\n定期评估AI工具的效果，确保其推荐符合项目规范和最佳实践。\n保持对AI工具输出结果的批判性思考，结合人工审查以确保准确性。\n关注数据隐私和安全性，特别是在处理敏感信息时。\n\n\n\n参考资料介绍\n\n通义灵码\nGitHub Copilot官方文档及社区案例研究，了解实际项目中的成功应用实例。\n\n\n\n总结\n对于新手软件工程师而言，合理利用AI工具是适应快速发展的技术环境、提升个人竞争力的关键。通过上述核心要点的实践，结合持续的学习与探索，可以逐步建立起与AI工具协同工作的能力，从而在软件开发的道路上走得更远、更稳。重要的是要认识到，AI工具虽强大，但人的判断力、创造力和团队协作仍是不可替代的核心价值。因此，平衡技术辅助与人类智慧，将是每位软件工程师成长过程中不可或缺的课题。"
  }
]